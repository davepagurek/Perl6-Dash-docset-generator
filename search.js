//$(function(){
  //$("#query").autocomplete({
      //response: function( e, ui ) {
        //if ( ! ui.content.length ) { $('#search').addClass(   'not-found') }
        //else {                       $('#search').removeClass('not-found') }
      //},
      //open: function() {
        //var ui_el = $('.ui-autocomplete');
        //if ( ui_el.offset().left < 0 ) {
            //ui_el.css({left: 0})
        //}
      //},
      //position: { my: "right top", at: "right bottom", of: "#search div" },
      //source: [
//{ label: "Language: 5to6-nutshell", value: "5to6-nutshell", url: "/language/5to6-nutshell" },
//{ label: "Language: 5to6-perlfunc", value: "5to6-perlfunc", url: "/language/5to6-perlfunc" },
//{ label: "Language: 5to6-perlop", value: "5to6-perlop", url: "/language/5to6-perlop" },
//{ label: "Language: 5to6-perlsyn", value: "5to6-perlsyn", url: "/language/5to6-perlsyn" },
//{ label: "Language: 5to6-perlvar", value: "5to6-perlvar", url: "/language/5to6-perlvar" },
//{ label: "Language: About the Docs", value: "About the Docs", url: "/language/about" },
//{ label: "Language: Classes and Objects", value: "Classes and Objects", url: "/language/classtut" },
//{ label: "Language: Concurrency", value: "Concurrency", url: "/language/concurrency" },
//{ label: "Language: Containers", value: "Containers", url: "/language/containers" },
//{ label: "Language: Control Flow", value: "Control Flow", url: "/language/control" },
//{ label: "Language: Entering Unicode Characters", value: "Entering Unicode Characters", url: "/language/unicode_entry" },
//{ label: "Language: Exceptions", value: "Exceptions", url: "/language/exceptions" },
//{ label: "Language: FAQ", value: "FAQ", url: "/language/faq" },
//{ label: "Language: Functions", value: "Functions", url: "/language/functions" },
//{ label: "Language: Glossary", value: "Glossary", url: "/language/glossary" },
//{ label: "Language: Grammars", value: "Grammars", url: "/language/grammars" },
//{ label: "Language: Input\/Output", value: "Input\/Output", url: "/language/io" },
//{ label: "Language: Meta-Object Protocol", value: "Meta-Object Protocol", url: "/language/mop" },
//{ label: "Language: Modules", value: "Modules", url: "/language/modules" },
//{ label: "Language: Native Calling Interface", value: "Native Calling Interface", url: "/language/nativecall" },
//{ label: "Language: Object Orientation", value: "Object Orientation", url: "/language/objects" },
//{ label: "Language: Operators", value: "Operators", url: "/language/operators" },
//{ label: "Language: Packages", value: "Packages", url: "/language/packages" },
//{ label: "Language: Phasers", value: "Phasers", url: "/language/phasers" },
//{ label: "Language: Quoting Constructs", value: "Quoting Constructs", url: "/language/quoting" },
//{ label: "Language: Regexes", value: "Regexes", url: "/language/regexes" },
//{ label: "Language: Sets, Bags, and Mixes", value: "Sets, Bags, and Mixes", url: "/language/setbagmix" },
//{ label: "Language: Subscripts", value: "Subscripts", url: "/language/subscripts" },
//{ label: "Language: Syntax", value: "Syntax", url: "/language/syntax" },
//{ label: "Language: Terms", value: "Terms", url: "/language/terms" },
//{ label: "Language: Testing", value: "Testing", url: "/language/testing" },
//{ label: "Language: Traps to avoid", value: "Traps to avoid", url: "/language/traps" },
//{ label: "Language: Variables", value: "Variables", url: "/language/variables" },
//{ label: "Reference:  ! (twigils)", value: " ! (twigils)", url: "/language/classtut" },
//{ label: "Reference:  & (sigils)", value: " & (sigils)", url: "/language/classtut" },
//{ label: "Reference:  . (operators)", value: " . (operators)", url: "/language/classtut" },
//{ label: "Reference:  . (twigils)", value: " . (twigils)", url: "/language/classtut" },
//{ label: "Reference:  accessors (classes)", value: " accessors (classes)", url: "/language/classtut" },
//{ label: "Reference:  accessors (twigils)", value: " accessors (twigils)", url: "/language/classtut" },
//{ label: "Reference:  attributes (classes)", value: " attributes (classes)", url: "/language/classtut" },
//{ label: "Reference:  behavior (classes)", value: " behavior (classes)", url: "/language/classtut" },
//{ label: "Reference:  bless (objects)", value: " bless (objects)", url: "/language/classtut" },
//{ label: "Reference:  encapsulation (classes)", value: " encapsulation (classes)", url: "/language/classtut" },
//{ label: "Reference:  has (classes)", value: " has (classes)", url: "/language/classtut" },
//{ label: "Reference:  is rw (traits)", value: " is rw (traits)", url: "/language/classtut" },
//{ label: "Reference:  methods (classes)", value: " methods (classes)", url: "/language/classtut" },
//{ label: "Reference: $$ (regex)", value: "$$ (regex)", url: "/language/regexes" },
//{ label: "Reference: $0 (variable)", value: "$0 (variable)", url: "/language/variables" },
//{ label: "Reference: $1 (variable)", value: "$1 (variable)", url: "/language/variables" },
//{ label: "Reference: $<capture> = (regex)", value: "$<capture> = (regex)", url: "/language/regexes" },
//{ label: "Reference: $<named> (variable)", value: "$<named> (variable)", url: "/language/variables" },
//{ label: "Reference: % (regex)", value: "% (regex)", url: "/language/regexes" },
//{ label: "Reference: %% (regex)", value: "%% (regex)", url: "/language/regexes" },
//{ label: "Reference: %() (variable)", value: "%() (variable)", url: "/language/variables" },
//{ label: "Reference: ' ' (quote)", value: "' ' (quote)", url: "/language/quoting" },
//{ label: "Reference: ( ) (regex)", value: "( ) (regex)", url: "/language/regexes" },
//{ label: "Reference: * (regex)", value: "* (regex)", url: "/language/regexes" },
//{ label: "Reference: *% (parameter)", value: "*% (parameter)", url: "/type/Signature" },
//{ label: "Reference: ** (regex quantifier)", value: "** (regex quantifier)", url: "/language/regexes" },
//{ label: "Reference: *@ (parameter)", value: "*@ (parameter)", url: "/type/Signature" },
//{ label: "Reference: + (regex)", value: "+ (regex)", url: "/language/regexes" },
//{ label: "Reference: -> (syntax)", value: "-> (syntax)", url: "/language/functions" },
//{ label: "Reference: -A", value: "-A", url: "/type/IO::Path" },
//{ label: "Reference: -C", value: "-C", url: "/type/IO::Path" },
//{ label: "Reference: -M", value: "-M", url: "/type/IO::Path" },
//{ label: "Reference: -e", value: "-e", url: "/type/IO::Path" },
//{ label: "Reference: -f", value: "-f", url: "/type/IO::Path" },
//{ label: "Reference: . (regex)", value: ". (regex)", url: "/language/regexes" },
//{ label: "Reference: .( ) (postcircumfix)", value: ".( ) (postcircumfix)", url: "/language/operators" },
//{ label: "Reference: .< > (postcircumfix)", value: ".< > (postcircumfix)", url: "/language/operators" },
//{ label: "Reference: .[ ] (postcircumfix)", value: ".[ ] (postcircumfix)", url: "/language/operators" },
//{ label: "Reference: .defined", value: ".defined", url: "/language/classtut" },
//{ label: "Reference: .postfix (postfix)", value: ".postfix (postfix)", url: "/language/operators" },
//{ label: "Reference: .{ } (postcircumfix)", value: ".{ } (postcircumfix)", url: "/language/operators" },
//{ label: "Reference: :", value: ":", url: "/type/Pair" },
//{ label: "Reference: :!", value: ":!", url: "/type/Pair" },
//{ label: "Reference: ::Bind::Slice", value: "::Bind::Slice", url: "/type/X::Bind::Slice" },
//{ label: "Reference: :D (type constraint)", value: ":D (type constraint)", url: "/type/Signature" },
//{ label: "Reference: :U (type constraint)", value: ":U (type constraint)", url: "/type/Signature" },
//{ label: "Reference: :_ (type constraint)", value: ":_ (type constraint)", url: "/type/Signature" },
//{ label: "Reference: :c (matching adverb)", value: ":c (matching adverb)", url: "/language/regexes" },
//{ label: "Reference: :continue (matching adverb)", value: ":continue (matching adverb)", url: "/language/regexes" },
//{ label: "Reference: :d", value: ":d", url: "/type/IO::Path" },
//{ label: "Reference: :delete (subscript adverb)", value: ":delete (subscript adverb)", url: "/language/subscripts" },
//{ label: "Reference: :e", value: ":e", url: "/type/IO::Path" },
//{ label: "Reference: :exists (subscript adverb)", value: ":exists (subscript adverb)", url: "/language/subscripts" },
//{ label: "Reference: :f", value: ":f", url: "/type/IO::Path" },
//{ label: "Reference: :g (regex adverb)", value: ":g (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :global (regex adverb)", value: ":global (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :i (regex adverb)", value: ":i (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :ignorecase (regex adverb)", value: ":ignorecase (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :k (subscript adverb)", value: ":k (subscript adverb)", url: "/language/subscripts" },
//{ label: "Reference: :kv (subscript adverb)", value: ":kv (subscript adverb)", url: "/language/subscripts" },
//{ label: "Reference: :l", value: ":l", url: "/type/IO::Path" },
//{ label: "Reference: :p (regex adverb)", value: ":p (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :p (subscript adverb)", value: ":p (subscript adverb)", url: "/language/subscripts" },
//{ label: "Reference: :pos (regex adverb)", value: ":pos (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :r", value: ":r", url: "/type/IO::Path" },
//{ label: "Reference: :r (regex adverb)", value: ":r (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :ratchet (regex adverb)", value: ":ratchet (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :s", value: ":s", url: "/type/IO::Path" },
//{ label: "Reference: :s (regex adverb)", value: ":s (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :sigspace (regex adverb)", value: ":sigspace (regex adverb)", url: "/language/regexes" },
//{ label: "Reference: :v (subscript adverb)", value: ":v (subscript adverb)", url: "/language/subscripts" },
//{ label: "Reference: :w", value: ":w", url: "/type/IO::Path" },
//{ label: "Reference: :x", value: ":x", url: "/type/IO::Path" },
//{ label: "Reference: :z", value: ":z", url: "/type/IO::Path" },
//{ label: "Reference: < > (quote)", value: "< > (quote)", url: "/language/quoting" },
//{ label: "Reference: <-[ ]> (regex)", value: "<-[ ]> (regex)", url: "/language/regexes" },
//{ label: "Reference: <:property> (regex)", value: "<:property> (regex)", url: "/language/regexes" },
//{ label: "Reference: << (regex)", value: "<< (regex)", url: "/language/regexes" },
//{ label: "Reference: <[ ]> (regex)", value: "<[ ]> (regex)", url: "/language/regexes" },
//{ label: "Reference: => ", value: "=> ", url: "/type/Pair" },
//{ label: "Reference: >> (regex)", value: ">> (regex)", url: "/language/regexes" },
//{ label: "Reference: ? (regex)", value: "? (regex)", url: "/language/regexes" },
//{ label: "Reference: @() (variable)", value: "@() (variable)", url: "/language/variables" },
//{ label: "Reference: BUILD", value: "BUILD", url: "/language/classtut" },
//{ label: "Reference: DEFINITE (syntax)", value: "DEFINITE (syntax)", url: "/language/mop" },
//{ label: "Reference: DESTROY", value: "DESTROY", url: "/type/Metamodel::Finalization" },
//{ label: "Reference: Grammar (class)", value: "Grammar (class)", url: "/language/grammars" },
//{ label: "Reference: HOW (syntax)", value: "HOW (syntax)", url: "/language/mop" },
//{ label: "Reference: Q (quote)", value: "Q (quote)", url: "/language/quoting" },
//{ label: "Reference: VAR (syntax)", value: "VAR (syntax)", url: "/language/mop" },
//{ label: "Reference: WHAT (syntax)", value: "WHAT (syntax)", url: "/language/mop" },
//{ label: "Reference: WHERE (syntax)", value: "WHERE (syntax)", url: "/language/mop" },
//{ label: "Reference: WHICH (syntax)", value: "WHICH (syntax)", url: "/language/mop" },
//{ label: "Reference: WHO (syntax)", value: "WHO (syntax)", url: "/language/mop" },
//{ label: "Reference: WHY (syntax)", value: "WHY (syntax)", url: "/language/mop" },
//{ label: "Reference: X::Proc::Async::OpenForWriting", value: "X::Proc::Async::OpenForWriting", url: "/type/X::Proc::Async::OpenForWriting" },
//{ label: "Reference: [ ] (regex)", value: "[ ] (regex)", url: "/language/regexes" },
//{ label: "Reference: \" \" (quote)", value: "\" \" (quote)", url: "/language/quoting" },
//{ label: "Reference: \/ \/ (quote)", value: "\/ \/ (quote)", url: "/language/regexes" },
//{ label: "Reference: \\D (regex)", value: "\\D (regex)", url: "/language/regexes" },
//{ label: "Reference: \\H (regex)", value: "\\H (regex)", url: "/language/regexes" },
//{ label: "Reference: \\N (regex)", value: "\\N (regex)", url: "/language/regexes" },
//{ label: "Reference: \\S (regex)", value: "\\S (regex)", url: "/language/regexes" },
//{ label: "Reference: \\T (regex)", value: "\\T (regex)", url: "/language/regexes" },
//{ label: "Reference: \\V (regex)", value: "\\V (regex)", url: "/language/regexes" },
//{ label: "Reference: \\W (regex)", value: "\\W (regex)", url: "/language/regexes" },
//{ label: "Reference: \\d (regex)", value: "\\d (regex)", url: "/language/regexes" },
//{ label: "Reference: \\h (regex)", value: "\\h (regex)", url: "/language/regexes" },
//{ label: "Reference: \\n (regex)", value: "\\n (regex)", url: "/language/regexes" },
//{ label: "Reference: \\s (regex)", value: "\\s (regex)", url: "/language/regexes" },
//{ label: "Reference: \\t (regex)", value: "\\t (regex)", url: "/language/regexes" },
//{ label: "Reference: \\v (regex)", value: "\\v (regex)", url: "/language/regexes" },
//{ label: "Reference: \\w (regex)", value: "\\w (regex)", url: "/language/regexes" },
//{ label: "Reference: ^ (regex)", value: "^ (regex)", url: "/language/regexes" },
//{ label: "Reference: ^^ (regex)", value: "^^ (regex)", url: "/language/regexes" },
//{ label: "Reference: accessor methods", value: "accessor methods", url: "/language/classtut" },
//{ label: "Reference: attributes", value: "attributes", url: "/language/classtut" },
//{ label: "Reference: behavior", value: "behavior", url: "/language/classtut" },
//{ label: "Reference: bless", value: "bless", url: "/language/classtut" },
//{ label: "Reference: class", value: "class", url: "/language/classtut" },
//{ label: "Reference: class (declarator)", value: "class (declarator)", url: "/language/objects" },
//{ label: "Reference: classes", value: "classes", url: "/language/classtut" },
//{ label: "Reference: cmp-ok", value: "cmp-ok", url: "/language/testing" },
//{ label: "Reference: compunit", value: "compunit", url: "/language/modules" },
//{ label: "Reference: constructors", value: "constructors", url: "/language/classtut" },
//{ label: "Reference: control flow", value: "control flow", url: "/language/control" },
//{ label: "Reference: declarator", value: "declarator", url: "/language/functions" },
//{ label: "Reference: default when (control flow)", value: "default when (control flow)", url: "/language/control" },
//{ label: "Reference: defined", value: "defined", url: "/language/classtut" },
//{ label: "Reference: diag", value: "diag", url: "/language/testing" },
//{ label: "Reference: dies-ok", value: "dies-ok", url: "/language/testing" },
//{ label: "Reference: done-testing", value: "done-testing", url: "/language/testing" },
//{ label: "Reference: else elsif (control flow)", value: "else elsif (control flow)", url: "/language/control" },
//{ label: "Reference: encapsulation", value: "encapsulation", url: "/language/classtut" },
//{ label: "Reference: eval-dies-ok", value: "eval-dies-ok", url: "/language/testing" },
//{ label: "Reference: eval-lives-ok", value: "eval-lives-ok", url: "/language/testing" },
//{ label: "Reference: gather take (control flow)", value: "gather take (control flow)", url: "/language/control" },
//{ label: "Reference: grammar (declarator)", value: "grammar (declarator)", url: "/language/grammars" },
//{ label: "Reference: has", value: "has", url: "/language/classtut" },
//{ label: "Reference: invocant", value: "invocant", url: "/language/classtut" },
//{ label: "Reference: is", value: "is", url: "/language/testing" },
//{ label: "Reference: is copy (trait)", value: "is copy (trait)", url: "/type/Signature" },
//{ label: "Reference: is rw (trait)", value: "is rw (trait)", url: "/type/Signature" },
//{ label: "Reference: is-approx", value: "is-approx", url: "/language/testing" },
//{ label: "Reference: is-deeply", value: "is-deeply", url: "/language/testing" },
//{ label: "Reference: isa-ok", value: "isa-ok", url: "/language/testing" },
//{ label: "Reference: isnt", value: "isnt", url: "/language/testing" },
//{ label: "Reference: like", value: "like", url: "/language/testing" },
//{ label: "Reference: lives-ok", value: "lives-ok", url: "/language/testing" },
//{ label: "Reference: m (quote)", value: "m (quote)", url: "/language/regexes" },
//{ label: "Reference: methods", value: "methods", url: "/language/classtut" },
//{ label: "Reference: multi (declarator)", value: "multi (declarator)", url: "/language/functions" },
//{ label: "Reference: nativecall", value: "nativecall", url: "/language/nativecall" },
//{ label: "Reference: nok (ok)", value: "nok (ok)", url: "/language/testing" },
//{ label: "Reference: pass", value: "pass", url: "/language/testing" },
//{ label: "Reference: plan", value: "plan", url: "/language/testing" },
//{ label: "Reference: proceed succeed (control flow)", value: "proceed succeed (control flow)", url: "/language/control" },
//{ label: "Reference: q (quote)", value: "q (quote)", url: "/language/quoting" },
//{ label: "Reference: qq (quote)", value: "qq (quote)", url: "/language/quoting" },
//{ label: "Reference: qqw (quote)", value: "qqw (quote)", url: "/language/quoting" },
//{ label: "Reference: qqx (quote)", value: "qqx (quote)", url: "/language/quoting" },
//{ label: "Reference: qw (quote)", value: "qw (quote)", url: "/language/quoting" },
//{ label: "Reference: qx (quote)", value: "qx (quote)", url: "/language/quoting" },
//{ label: "Reference: regex (declarator)", value: "regex (declarator)", url: "/language/grammars" },
//{ label: "Reference: repeat (control flow)", value: "repeat (control flow)", url: "/language/control" },
//{ label: "Reference: role (declarator)", value: "role (declarator)", url: "/language/objects" },
//{ label: "Reference: rule (declarator)", value: "rule (declarator)", url: "/language/grammars" },
//{ label: "Reference: rx (quote)", value: "rx (quote)", url: "/language/regexes" },
//{ label: "Reference: skip", value: "skip", url: "/language/testing" },
//{ label: "Reference: skip-rest", value: "skip-rest", url: "/language/testing" },
//{ label: "Reference: state", value: "state", url: "/language/classtut" },
//{ label: "Reference: sub (declarator)", value: "sub (declarator)", url: "/language/functions" },
//{ label: "Reference: subtest", value: "subtest", url: "/language/testing" },
//{ label: "Reference: throws-like", value: "throws-like", url: "/language/testing" },
//{ label: "Reference: todo", value: "todo", url: "/language/testing" },
//{ label: "Reference: token (declarator)", value: "token (declarator)", url: "/language/grammars" },
//{ label: "Reference: twigils", value: "twigils", url: "/language/classtut" },
//{ label: "Reference: type object", value: "type object", url: "/language/classtut" },
//{ label: "Reference: unlike", value: "unlike", url: "/language/testing" },
//{ label: "Reference: use-ok", value: "use-ok", url: "/language/testing" },
//{ label: "Reference: while until (control flow)", value: "while until (control flow)", url: "/language/control" },
//{ label: "Reference: with orwith without (control flow)", value: "with orwith without (control flow)", url: "/language/control" },
//{ label: "Reference: | (parameter)", value: "| (parameter)", url: "/type/Signature" },
//{ label: "Reference: | (regex)", value: "| (regex)", url: "/language/regexes" },
//{ label: "Reference: || (regex)", value: "|| (regex)", url: "/language/regexes" },
//{ label: "Reference: « (regex)", value: "« (regex)", url: "/language/regexes" },
//{ label: "Reference: « » (quote)", value: "« » (quote)", url: "/language/quoting" },
//{ label: "Reference: » (regex)", value: "» (regex)", url: "/language/regexes" },
//{ label: "Reference: ｢ ｣ (quote)", value: "｢ ｣ (quote)", url: "/language/quoting" },
//{ label: "Twigil: !", value: "!", url: "/syntax/%21" },
//{ label: "Variable: $", value: "$", url: "/syntax/%24" },
//{ label: "Variable: $!", value: "$!", url: "/syntax/%24%21" },
//{ label: "Variable: $0", value: "$0", url: "/syntax/%240" },
//{ label: "Variable: $<named>", value: "$<named>", url: "/syntax/%24%3Cnamed%3E" },
//{ label: "Variable: $\/", value: "$\/", url: "/syntax/%24%2F" },
//{ label: "Variable: $_", value: "$_", url: "/syntax/%24_" },
//{ label: "Syntax: %", value: "%", url: "/syntax/%25" },
//{ label: "Regex: ( )", value: "( )", url: "/syntax/%28%20%29" },
//{ label: "Syntax: *", value: "*", url: "/syntax/%2A" },
//{ label: "Regex Quantifier: **", value: "**", url: "/syntax/%2A%2A" },
//{ label: "Parameter: *@", value: "*@", url: "/syntax/%2A%40" },
//{ label: "Regex: +", value: "+", url: "/syntax/%2B" },
//{ label: "Syntax: ->", value: "->", url: "/syntax/-%3E" },
//{ label: "Syntax: .", value: ".", url: "/syntax/." },
//{ label: "Twigil: :", value: ":", url: "/syntax/%3A" },
//{ label: "Type Constraint: :D", value: ":D", url: "/syntax/%3AD" },
//{ label: "Matching Adverb: :continue", value: ":continue", url: "/syntax/%3Acontinue" },
//{ label: "Subscript Adverb: :delete", value: ":delete", url: "/syntax/%3Adelete" },
//{ label: "Subscript Adverb: :exists", value: ":exists", url: "/syntax/%3Aexists" },
//{ label: "Regex Adverb: :global", value: ":global", url: "/syntax/%3Aglobal" },
//{ label: "Regex Adverb: :ignorecase", value: ":ignorecase", url: "/syntax/%3Aignorecase" },
//{ label: "Subscript Adverb: :k", value: ":k", url: "/syntax/%3Ak" },
//{ label: "Subscript Adverb: :kv", value: ":kv", url: "/syntax/%3Akv" },
//{ label: "Subscript Adverb: :p", value: ":p", url: "/syntax/%3Ap" },
//{ label: "Regex Adverb: :pos", value: ":pos", url: "/syntax/%3Apos" },
//{ label: "Regex Adverb: :ratchet", value: ":ratchet", url: "/syntax/%3Aratchet" },
//{ label: "Regex Adverb: :sigspace", value: ":sigspace", url: "/syntax/%3Asigspace" },
//{ label: "Subscript Adverb: :v", value: ":v", url: "/syntax/%3Av" },
//{ label: "Twigil: <", value: "<", url: "/syntax/%3C" },
//{ label: "Regex: <:property>", value: "<:property>", url: "/syntax/%3C%3Aproperty%3E" },
//{ label: "Regex: <<", value: "<<", url: "/syntax/%3C%3C" },
//{ label: "Regex: <[ ]>", value: "<[ ]>", url: "/syntax/%3C%5B%20%5D%3E" },
//{ label: "Twigil: =", value: "=", url: "/syntax/%3D" },
//{ label: "Syntax: ?", value: "?", url: "/syntax/%3F" },
//{ label: "Variable: @", value: "@", url: "/syntax/%40" },
//{ label: "Syntax: DEFINITE", value: "DEFINITE", url: "/syntax/DEFINITE" },
//{ label: "Syntax: HOW", value: "HOW", url: "/syntax/HOW" },
//{ label: "Quote: Q", value: "Q", url: "/syntax/Q" },
//{ label: "Syntax: VAR", value: "VAR", url: "/syntax/VAR" },
//{ label: "Syntax: WHAT", value: "WHAT", url: "/syntax/WHAT" },
//{ label: "Syntax: WHERE", value: "WHERE", url: "/syntax/WHERE" },
//{ label: "Syntax: WHICH", value: "WHICH", url: "/syntax/WHICH" },
//{ label: "Syntax: WHO", value: "WHO", url: "/syntax/WHO" },
//{ label: "Syntax: WHY", value: "WHY", url: "/syntax/WHY" },
//{ label: "Quote: \/ \/", value: "\/ \/", url: "/syntax/%2F%20%2F" },
//{ label: "Syntax: ^", value: "^", url: "/syntax/%5E" },
//{ label: "Regex: ^^", value: "^^", url: "/syntax/%5E%5E" },
//{ label: "Declarator: anon", value: "anon", url: "/syntax/anon" },
//{ label: "Declarator: augment", value: "augment", url: "/syntax/augment" },
//{ label: "Control Flow: blocks", value: "blocks", url: "/syntax/blocks" },
//{ label: "Declarator: class", value: "class", url: "/syntax/class" },
//{ label: "Variable: declaration", value: "declaration", url: "/syntax/declaration" },
//{ label: "Control Flow: default when", value: "default when", url: "/syntax/default%20when" },
//{ label: "Control Flow: do", value: "do", url: "/syntax/do" },
//{ label: "Control Flow: else elsif", value: "else elsif", url: "/syntax/else%20elsif" },
//{ label: "Control Flow: for", value: "for", url: "/syntax/for" },
//{ label: "Control Flow: gather take", value: "gather take", url: "/syntax/gather%20take" },
//{ label: "Control Flow: given", value: "given", url: "/syntax/given" },
//{ label: "Control Flow: goto", value: "goto", url: "/syntax/goto" },
//{ label: "Declarator: has", value: "has", url: "/syntax/has" },
//{ label: "Control Flow: if", value: "if", url: "/syntax/if" },
//{ label: "Control Flow: last", value: "last", url: "/syntax/last" },
//{ label: "Control Flow: loop", value: "loop", url: "/syntax/loop" },
//{ label: "Declarator: multi", value: "multi", url: "/syntax/multi" },
//{ label: "Declarator: my", value: "my", url: "/syntax/my" },
//{ label: "Compunit: need", value: "need", url: "/syntax/need" },
//{ label: "Control Flow: next", value: "next", url: "/syntax/next" },
//{ label: "Declarator: our", value: "our", url: "/syntax/our" },
//{ label: "Control Flow: proceed succeed", value: "proceed succeed", url: "/syntax/proceed%20succeed" },
//{ label: "Declarator: proto", value: "proto", url: "/syntax/proto" },
//{ label: "Quote: q", value: "q", url: "/syntax/q" },
//{ label: "Quote: qq", value: "qq", url: "/syntax/qq" },
//{ label: "Quote: qqw", value: "qqw", url: "/syntax/qqw" },
//{ label: "Quote: qqx", value: "qqx", url: "/syntax/qqx" },
//{ label: "Quote: qw", value: "qw", url: "/syntax/qw" },
//{ label: "Quote: qx", value: "qx", url: "/syntax/qx" },
//{ label: "Control Flow: redo", value: "redo", url: "/syntax/redo" },
//{ label: "Syntax: regex", value: "regex", url: "/syntax/regex" },
//{ label: "Control Flow: repeat", value: "repeat", url: "/syntax/repeat" },
//{ label: "Compunit: require", value: "require", url: "/syntax/require" },
//{ label: "Control Flow: return", value: "return", url: "/syntax/return" },
//{ label: "Declarator: role", value: "role", url: "/syntax/role" },
//{ label: "Declarator: state", value: "state", url: "/syntax/state" },
//{ label: "Control Flow: statements", value: "statements", url: "/syntax/statements" },
//{ label: "Declarator: sub", value: "sub", url: "/syntax/sub" },
//{ label: "Declarator: supersede", value: "supersede", url: "/syntax/supersede" },
//{ label: "Control Flow: unless", value: "unless", url: "/syntax/unless" },
//{ label: "Compunit: use", value: "use", url: "/syntax/use" },
//{ label: "Control Flow: while until", value: "while until", url: "/syntax/while%20until" },
//{ label: "Control Flow: with orwith without", value: "with orwith without", url: "/syntax/with%20orwith%20without" },
//{ label: "Syntax: |", value: "|", url: "/syntax/%7C" },
//{ label: "Regex: ||", value: "||", url: "/syntax/%7C%7C" },
//{ label: "Twigil: ~", value: "~", url: "/syntax/~" },
//{ label: "Class: AST", value: "AST", url: "/type/AST" },
//{ label: "Class: Any", value: "Any", url: "/type/Any" },
//{ label: "Class: Array", value: "Array", url: "/type/Array" },
//{ label: "Role: Associative", value: "Associative", url: "/type/Associative" },
//{ label: "Class: Attribute", value: "Attribute", url: "/type/Attribute" },
//{ label: "Class: Backtrace", value: "Backtrace", url: "/type/Backtrace" },
//{ label: "Class: Backtrace::Frame", value: "Backtrace::Frame", url: "/type/Backtrace::Frame" },
//{ label: "Class: Bag", value: "Bag", url: "/type/Bag" },
//{ label: "Class: BagHash", value: "BagHash", url: "/type/BagHash" },
//{ label: "Role: Baggy", value: "Baggy", url: "/type/Baggy" },
//{ label: "Role: Blob", value: "Blob", url: "/type/Blob" },
//{ label: "Class: Block", value: "Block", url: "/type/Block" },
//{ label: "Class: Bool", value: "Bool", url: "/type/Bool" },
//{ label: "Role: Buf", value: "Buf", url: "/type/Buf" },
//{ label: "Role: Callable", value: "Callable", url: "/type/Callable" },
//{ label: "Class: Capture", value: "Capture", url: "/type/Capture" },
//{ label: "Class: Channel", value: "Channel", url: "/type/Channel" },
//{ label: "Class: Code", value: "Code", url: "/type/Code" },
//{ label: "Class: Complex", value: "Complex", url: "/type/Complex" },
//{ label: "Class: Cool", value: "Cool", url: "/type/Cool" },
//{ label: "Class: CurrentThreadScheduler", value: "CurrentThreadScheduler", url: "/type/CurrentThreadScheduler" },
//{ label: "Class: Cursor", value: "Cursor", url: "/type/Cursor" },
//{ label: "Class: Date", value: "Date", url: "/type/Date" },
//{ label: "Class: DateTime", value: "DateTime", url: "/type/DateTime" },
//{ label: "Role: Dateish", value: "Dateish", url: "/type/Dateish" },
//{ label: "Class: Duration", value: "Duration", url: "/type/Duration" },
//{ label: "Class: Enum", value: "Enum", url: "/type/Enum" },
//{ label: "Class: Exception", value: "Exception", url: "/type/Exception" },
//{ label: "Class: Failure", value: "Failure", url: "/type/Failure" },
//{ label: "Class: FatRat", value: "FatRat", url: "/type/FatRat" },
//{ label: "Type: Grammar", value: "Grammar", url: "/type/Grammar" },
//{ label: "Class: Hash", value: "Hash", url: "/type/Hash" },
//{ label: "Role: IO", value: "IO", url: "/type/IO" },
//{ label: "Class: IO::Handle", value: "IO::Handle", url: "/type/IO::Handle" },
//{ label: "Class: IO::Notification", value: "IO::Notification", url: "/type/IO::Notification" },
//{ label: "Class: IO::Path", value: "IO::Path", url: "/type/IO::Path" },
//{ label: "Class: IO::Pipe", value: "IO::Pipe", url: "/type/IO::Pipe" },
//{ label: "Role: IO::Socket", value: "IO::Socket", url: "/type/IO::Socket" },
//{ label: "Class: IO::Socket::Async", value: "IO::Socket::Async", url: "/type/IO::Socket::Async" },
//{ label: "Class: IO::Socket::INET", value: "IO::Socket::INET", url: "/type/IO::Socket::INET" },
//{ label: "Type: IO::Spec", value: "IO::Spec", url: "/type/IO::Spec" },
//{ label: "Class: IO::Spec::Cygwin", value: "IO::Spec::Cygwin", url: "/type/IO::Spec::Cygwin" },
//{ label: "Class: IO::Spec::Unix", value: "IO::Spec::Unix", url: "/type/IO::Spec::Unix" },
//{ label: "Class: IO::Spec::Win32", value: "IO::Spec::Win32", url: "/type/IO::Spec::Win32" },
//{ label: "Class: Instant", value: "Instant", url: "/type/Instant" },
//{ label: "Class: Int", value: "Int", url: "/type/Int" },
//{ label: "Role: Iterable", value: "Iterable", url: "/type/Iterable" },
//{ label: "Role: Iterator", value: "Iterator", url: "/type/Iterator" },
//{ label: "Class: Junction", value: "Junction", url: "/type/Junction" },
//{ label: "Class: Label", value: "Label", url: "/type/Label" },
//{ label: "Class: List", value: "List", url: "/type/List" },
//{ label: "Class: Lock", value: "Lock", url: "/type/Lock" },
//{ label: "Class: Macro", value: "Macro", url: "/type/Macro" },
//{ label: "Class: Map", value: "Map", url: "/type/Map" },
//{ label: "Class: Match", value: "Match", url: "/type/Match" },
//{ label: "Role: Metamodel::AttributeContainer", value: "Metamodel::AttributeContainer", url: "/type/Metamodel::AttributeContainer" },
//{ label: "Role: Metamodel::C3MRO", value: "Metamodel::C3MRO", url: "/type/Metamodel::C3MRO" },
//{ label: "Class: Metamodel::ClassHOW", value: "Metamodel::ClassHOW", url: "/type/Metamodel::ClassHOW" },
//{ label: "Role: Metamodel::Finalization", value: "Metamodel::Finalization", url: "/type/Metamodel::Finalization" },
//{ label: "Role: Metamodel::MROBasedMethodDispatch", value: "Metamodel::MROBasedMethodDispatch", url: "/type/Metamodel::MROBasedMethodDispatch" },
//{ label: "Role: Metamodel::MethodContainer", value: "Metamodel::MethodContainer", url: "/type/Metamodel::MethodContainer" },
//{ label: "Role: Metamodel::MultipleInheritance", value: "Metamodel::MultipleInheritance", url: "/type/Metamodel::MultipleInheritance" },
//{ label: "Role: Metamodel::Naming", value: "Metamodel::Naming", url: "/type/Metamodel::Naming" },
//{ label: "Class: Metamodel::Primitives", value: "Metamodel::Primitives", url: "/type/Metamodel::Primitives" },
//{ label: "Role: Metamodel::PrivateMethodContainer", value: "Metamodel::PrivateMethodContainer", url: "/type/Metamodel::PrivateMethodContainer" },
//{ label: "Role: Metamodel::RoleContainer", value: "Metamodel::RoleContainer", url: "/type/Metamodel::RoleContainer" },
//{ label: "Role: Metamodel::Trusting", value: "Metamodel::Trusting", url: "/type/Metamodel::Trusting" },
//{ label: "Class: Method", value: "Method", url: "/type/Method" },
//{ label: "Class: Mix", value: "Mix", url: "/type/Mix" },
//{ label: "Class: MixHash", value: "MixHash", url: "/type/MixHash" },
//{ label: "Role: Mixy", value: "Mixy", url: "/type/Mixy" },
//{ label: "Class: Mu", value: "Mu", url: "/type/Mu" },
//{ label: "Class: Nil", value: "Nil", url: "/type/Nil" },
//{ label: "Class: Num", value: "Num", url: "/type/Num" },
//{ label: "Role: Numeric", value: "Numeric", url: "/type/Numeric" },
//{ label: "Class: ObjAt", value: "ObjAt", url: "/type/ObjAt" },
//{ label: "Class: Pair", value: "Pair", url: "/type/Pair" },
//{ label: "Class: Parameter", value: "Parameter", url: "/type/Parameter" },
//{ label: "Class: Pod::Block", value: "Pod::Block", url: "/type/Pod::Block" },
//{ label: "Class: Pod::Block::Code", value: "Pod::Block::Code", url: "/type/Pod::Block::Code" },
//{ label: "Class: Pod::Block::Named", value: "Pod::Block::Named", url: "/type/Pod::Block::Named" },
//{ label: "Class: Pod::Block::Para", value: "Pod::Block::Para", url: "/type/Pod::Block::Para" },
//{ label: "Class: Pod::Item", value: "Pod::Item", url: "/type/Pod::Item" },
//{ label: "Role: Positional", value: "Positional", url: "/type/Positional" },
//{ label: "Role: PositionalBindFailover", value: "PositionalBindFailover", url: "/type/PositionalBindFailover" },
//{ label: "Class: Proc", value: "Proc", url: "/type/Proc" },
//{ label: "Class: Proc::Async", value: "Proc::Async", url: "/type/Proc::Async" },
//{ label: "Class: Proc::Status", value: "Proc::Status", url: "/type/Proc::Status" },
//{ label: "Class: Promise", value: "Promise", url: "/type/Promise" },
//{ label: "Class: Proxy", value: "Proxy", url: "/type/Proxy" },
//{ label: "Role: QuantHash", value: "QuantHash", url: "/type/QuantHash" },
//{ label: "Class: Range", value: "Range", url: "/type/Range" },
//{ label: "Class: Rat", value: "Rat", url: "/type/Rat" },
//{ label: "Role: Rational", value: "Rational", url: "/type/Rational" },
//{ label: "Role: Real", value: "Real", url: "/type/Real" },
//{ label: "Class: Regex", value: "Regex", url: "/type/Regex" },
//{ label: "Class: Routine", value: "Routine", url: "/type/Routine" },
//{ label: "Role: Scheduler", value: "Scheduler", url: "/type/Scheduler" },
//{ label: "Class: Seq", value: "Seq", url: "/type/Seq" },
//{ label: "Class: Set", value: "Set", url: "/type/Set" },
//{ label: "Class: SetHash", value: "SetHash", url: "/type/SetHash" },
//{ label: "Role: Setty", value: "Setty", url: "/type/Setty" },
//{ label: "Class: Signature", value: "Signature", url: "/type/Signature" },
//{ label: "Class: Slip", value: "Slip", url: "/type/Slip" },
//{ label: "Class: Stash", value: "Stash", url: "/type/Stash" },
//{ label: "Class: Str", value: "Str", url: "/type/Str" },
//{ label: "Role: Stringy", value: "Stringy", url: "/type/Stringy" },
//{ label: "Class: Sub", value: "Sub", url: "/type/Sub" },
//{ label: "Class: Submethod", value: "Submethod", url: "/type/Submethod" },
//{ label: "Class: Supplier", value: "Supplier", url: "/type/Supplier" },
//{ label: "Class: Supply", value: "Supply", url: "/type/Supply" },
//{ label: "Class: Tap", value: "Tap", url: "/type/Tap" },
//{ label: "Class: Temporal", value: "Temporal", url: "/type/Temporal" },
//{ label: "Class: Thread", value: "Thread", url: "/type/Thread" },
//{ label: "Class: ThreadPoolScheduler", value: "ThreadPoolScheduler", url: "/type/ThreadPoolScheduler" },
//{ label: "Class: Variable", value: "Variable", url: "/type/Variable" },
//{ label: "Class: Version", value: "Version", url: "/type/Version" },
//{ label: "Class: Whatever", value: "Whatever", url: "/type/Whatever" },
//{ label: "Class: WhateverCode", value: "WhateverCode", url: "/type/WhateverCode" },
//{ label: "Class: X::AdHoc", value: "X::AdHoc", url: "/type/X::AdHoc" },
//{ label: "Class: X::Anon::Augment", value: "X::Anon::Augment", url: "/type/X::Anon::Augment" },
//{ label: "Class: X::Anon::Multi", value: "X::Anon::Multi", url: "/type/X::Anon::Multi" },
//{ label: "Class: X::Assignment::RO", value: "X::Assignment::RO", url: "/type/X::Assignment::RO" },
//{ label: "Class: X::Attribute::NoPackage", value: "X::Attribute::NoPackage", url: "/type/X::Attribute::NoPackage" },
//{ label: "Class: X::Attribute::Package", value: "X::Attribute::Package", url: "/type/X::Attribute::Package" },
//{ label: "Class: X::Attribute::Undeclared", value: "X::Attribute::Undeclared", url: "/type/X::Attribute::Undeclared" },
//{ label: "Class: X::Augment::NoSuchType", value: "X::Augment::NoSuchType", url: "/type/X::Augment::NoSuchType" },
//{ label: "Class: X::Bind", value: "X::Bind", url: "/type/X::Bind" },
//{ label: "Class: X::Bind::NativeType", value: "X::Bind::NativeType", url: "/type/X::Bind::NativeType" },
//{ label: "Class: X::Bind::Slice", value: "X::Bind::Slice", url: "/type/X::Bind::Slice" },
//{ label: "Class: X::Channel::ReceiveOnClosed", value: "X::Channel::ReceiveOnClosed", url: "/type/X::Channel::ReceiveOnClosed" },
//{ label: "Class: X::Channel::SendOnClosed", value: "X::Channel::SendOnClosed", url: "/type/X::Channel::SendOnClosed" },
//{ label: "Role: X::Comp", value: "X::Comp", url: "/type/X::Comp" },
//{ label: "Class: X::Composition::NotComposable", value: "X::Composition::NotComposable", url: "/type/X::Composition::NotComposable" },
//{ label: "Class: X::Constructor::Positional", value: "X::Constructor::Positional", url: "/type/X::Constructor::Positional" },
//{ label: "Class: X::ControlFlow", value: "X::ControlFlow", url: "/type/X::ControlFlow" },
//{ label: "Class: X::ControlFlow::Return", value: "X::ControlFlow::Return", url: "/type/X::ControlFlow::Return" },
//{ label: "Class: X::Declaration::Scope", value: "X::Declaration::Scope", url: "/type/X::Declaration::Scope" },
//{ label: "Class: X::Declaration::Scope::Multi", value: "X::Declaration::Scope::Multi", url: "/type/X::Declaration::Scope::Multi" },
//{ label: "Class: X::Does::TypeObject", value: "X::Does::TypeObject", url: "/type/X::Does::TypeObject" },
//{ label: "Class: X::Eval::NoSuchLang", value: "X::Eval::NoSuchLang", url: "/type/X::Eval::NoSuchLang" },
//{ label: "Class: X::Export::NameClash", value: "X::Export::NameClash", url: "/type/X::Export::NameClash" },
//{ label: "Role: X::IO", value: "X::IO", url: "/type/X::IO" },
//{ label: "Class: X::IO::Chdir", value: "X::IO::Chdir", url: "/type/X::IO::Chdir" },
//{ label: "Class: X::IO::Chmod", value: "X::IO::Chmod", url: "/type/X::IO::Chmod" },
//{ label: "Class: X::IO::Copy", value: "X::IO::Copy", url: "/type/X::IO::Copy" },
//{ label: "Class: X::IO::Cwd", value: "X::IO::Cwd", url: "/type/X::IO::Cwd" },
//{ label: "Class: X::IO::Dir", value: "X::IO::Dir", url: "/type/X::IO::Dir" },
//{ label: "Class: X::IO::Mkdir", value: "X::IO::Mkdir", url: "/type/X::IO::Mkdir" },
//{ label: "Class: X::IO::Rename", value: "X::IO::Rename", url: "/type/X::IO::Rename" },
//{ label: "Class: X::IO::Rmdir", value: "X::IO::Rmdir", url: "/type/X::IO::Rmdir" },
//{ label: "Class: X::IO::Unlink", value: "X::IO::Unlink", url: "/type/X::IO::Unlink" },
//{ label: "Class: X::Inheritance::NotComposed", value: "X::Inheritance::NotComposed", url: "/type/X::Inheritance::NotComposed" },
//{ label: "Class: X::Inheritance::Unsupported", value: "X::Inheritance::Unsupported", url: "/type/X::Inheritance::Unsupported" },
//{ label: "Class: X::Method::InvalidQualifier", value: "X::Method::InvalidQualifier", url: "/type/X::Method::InvalidQualifier" },
//{ label: "Class: X::Method::NotFound", value: "X::Method::NotFound", url: "/type/X::Method::NotFound" },
//{ label: "Class: X::Method::Private::Permission", value: "X::Method::Private::Permission", url: "/type/X::Method::Private::Permission" },
//{ label: "Class: X::Method::Private::Unqualified", value: "X::Method::Private::Unqualified", url: "/type/X::Method::Private::Unqualified" },
//{ label: "Class: X::Mixin::NotComposable", value: "X::Mixin::NotComposable", url: "/type/X::Mixin::NotComposable" },
//{ label: "Class: X::NYI", value: "X::NYI", url: "/type/X::NYI" },
//{ label: "Class: X::NoDispatcher", value: "X::NoDispatcher", url: "/type/X::NoDispatcher" },
//{ label: "Class: X::Numeric::Real", value: "X::Numeric::Real", url: "/type/X::Numeric::Real" },
//{ label: "Role: X::OS", value: "X::OS", url: "/type/X::OS" },
//{ label: "Class: X::Obsolete", value: "X::Obsolete", url: "/type/X::Obsolete" },
//{ label: "Class: X::OutOfRange", value: "X::OutOfRange", url: "/type/X::OutOfRange" },
//{ label: "Class: X::Package::Stubbed", value: "X::Package::Stubbed", url: "/type/X::Package::Stubbed" },
//{ label: "Class: X::Parameter::Default", value: "X::Parameter::Default", url: "/type/X::Parameter::Default" },
//{ label: "Class: X::Parameter::MultipleTypeConstraints", value: "X::Parameter::MultipleTypeConstraints", url: "/type/X::Parameter::MultipleTypeConstraints" },
//{ label: "Class: X::Parameter::Placeholder", value: "X::Parameter::Placeholder", url: "/type/X::Parameter::Placeholder" },
//{ label: "Class: X::Parameter::Twigil", value: "X::Parameter::Twigil", url: "/type/X::Parameter::Twigil" },
//{ label: "Class: X::Parameter::WrongOrder", value: "X::Parameter::WrongOrder", url: "/type/X::Parameter::WrongOrder" },
//{ label: "Class: X::Phaser::Multiple", value: "X::Phaser::Multiple", url: "/type/X::Phaser::Multiple" },
//{ label: "Class: X::Phaser::PrePost", value: "X::Phaser::PrePost", url: "/type/X::Phaser::PrePost" },
//{ label: "Class: X::Placeholder::Block", value: "X::Placeholder::Block", url: "/type/X::Placeholder::Block" },
//{ label: "Class: X::Placeholder::Mainline", value: "X::Placeholder::Mainline", url: "/type/X::Placeholder::Mainline" },
//{ label: "Role: X::Pod", value: "X::Pod", url: "/type/X::Pod" },
//{ label: "Role: X::Proc::Async", value: "X::Proc::Async", url: "/type/X::Proc::Async" },
//{ label: "Class: X::Proc::Async::AlreadyStarted", value: "X::Proc::Async::AlreadyStarted", url: "/type/X::Proc::Async::AlreadyStarted" },
//{ label: "Class: X::Proc::Async::CharsOrBytes", value: "X::Proc::Async::CharsOrBytes", url: "/type/X::Proc::Async::CharsOrBytes" },
//{ label: "Class: X::Proc::Async::MustBeStarted", value: "X::Proc::Async::MustBeStarted", url: "/type/X::Proc::Async::MustBeStarted" },
//{ label: "Class: X::Proc::Async::OpenForWriting", value: "X::Proc::Async::OpenForWriting", url: "/type/X::Proc::Async::OpenForWriting" },
//{ label: "Class: X::Proc::Async::TapBeforeSpawn", value: "X::Proc::Async::TapBeforeSpawn", url: "/type/X::Proc::Async::TapBeforeSpawn" },
//{ label: "Class: X::Promise::CauseOnlyValidOnBroken", value: "X::Promise::CauseOnlyValidOnBroken", url: "/type/X::Promise::CauseOnlyValidOnBroken" },
//{ label: "Class: X::Redeclaration", value: "X::Redeclaration", url: "/type/X::Redeclaration" },
//{ label: "Class: X::Role::Initialization", value: "X::Role::Initialization", url: "/type/X::Role::Initialization" },
//{ label: "Class: X::Sequence::Deduction", value: "X::Sequence::Deduction", url: "/type/X::Sequence::Deduction" },
//{ label: "Class: X::Signature::NameClash", value: "X::Signature::NameClash", url: "/type/X::Signature::NameClash" },
//{ label: "Class: X::Signature::Placeholder", value: "X::Signature::Placeholder", url: "/type/X::Signature::Placeholder" },
//{ label: "Class: X::Str::Numeric", value: "X::Str::Numeric", url: "/type/X::Str::Numeric" },
//{ label: "Class: X::StubCode", value: "X::StubCode", url: "/type/X::StubCode" },
//{ label: "Role: X::Syntax", value: "X::Syntax", url: "/type/X::Syntax" },
//{ label: "Class: X::Syntax::Augment::Role", value: "X::Syntax::Augment::Role", url: "/type/X::Syntax::Augment::Role" },
//{ label: "Class: X::Syntax::Augment::WithoutMonkeyTyping", value: "X::Syntax::Augment::WithoutMonkeyTyping", url: "/type/X::Syntax::Augment::WithoutMonkeyTyping" },
//{ label: "Class: X::Syntax::Comment::Embedded", value: "X::Syntax::Comment::Embedded", url: "/type/X::Syntax::Comment::Embedded" },
//{ label: "Class: X::Syntax::Confused", value: "X::Syntax::Confused", url: "/type/X::Syntax::Confused" },
//{ label: "Class: X::Syntax::InfixInTermPosition", value: "X::Syntax::InfixInTermPosition", url: "/type/X::Syntax::InfixInTermPosition" },
//{ label: "Class: X::Syntax::Malformed", value: "X::Syntax::Malformed", url: "/type/X::Syntax::Malformed" },
//{ label: "Class: X::Syntax::Missing", value: "X::Syntax::Missing", url: "/type/X::Syntax::Missing" },
//{ label: "Class: X::Syntax::NegatedPair", value: "X::Syntax::NegatedPair", url: "/type/X::Syntax::NegatedPair" },
//{ label: "Class: X::Syntax::NoSelf", value: "X::Syntax::NoSelf", url: "/type/X::Syntax::NoSelf" },
//{ label: "Class: X::Syntax::Number::RadixOutOfRange", value: "X::Syntax::Number::RadixOutOfRange", url: "/type/X::Syntax::Number::RadixOutOfRange" },
//{ label: "Class: X::Syntax::P5", value: "X::Syntax::P5", url: "/type/X::Syntax::P5" },
//{ label: "Class: X::Syntax::Regex::Adverb", value: "X::Syntax::Regex::Adverb", url: "/type/X::Syntax::Regex::Adverb" },
//{ label: "Class: X::Syntax::Regex::SolitaryQuantifier", value: "X::Syntax::Regex::SolitaryQuantifier", url: "/type/X::Syntax::Regex::SolitaryQuantifier" },
//{ label: "Class: X::Syntax::Reserved", value: "X::Syntax::Reserved", url: "/type/X::Syntax::Reserved" },
//{ label: "Class: X::Syntax::Self::WithoutObject", value: "X::Syntax::Self::WithoutObject", url: "/type/X::Syntax::Self::WithoutObject" },
//{ label: "Class: X::Syntax::Signature::InvocantMarker", value: "X::Syntax::Signature::InvocantMarker", url: "/type/X::Syntax::Signature::InvocantMarker" },
//{ label: "Class: X::Syntax::Term::MissingInitializer", value: "X::Syntax::Term::MissingInitializer", url: "/type/X::Syntax::Term::MissingInitializer" },
//{ label: "Class: X::Syntax::UnlessElse", value: "X::Syntax::UnlessElse", url: "/type/X::Syntax::UnlessElse" },
//{ label: "Class: X::Syntax::Variable::Match", value: "X::Syntax::Variable::Match", url: "/type/X::Syntax::Variable::Match" },
//{ label: "Class: X::Syntax::Variable::Numeric", value: "X::Syntax::Variable::Numeric", url: "/type/X::Syntax::Variable::Numeric" },
//{ label: "Class: X::Syntax::Variable::Twigil", value: "X::Syntax::Variable::Twigil", url: "/type/X::Syntax::Variable::Twigil" },
//{ label: "Class: X::Temporal", value: "X::Temporal", url: "/type/X::Temporal" },
//{ label: "Class: X::Temporal::Truncation", value: "X::Temporal::Truncation", url: "/type/X::Temporal::Truncation" },
//{ label: "Class: X::TypeCheck", value: "X::TypeCheck", url: "/type/X::TypeCheck" },
//{ label: "Class: X::TypeCheck::Assignment", value: "X::TypeCheck::Assignment", url: "/type/X::TypeCheck::Assignment" },
//{ label: "Class: X::TypeCheck::Binding", value: "X::TypeCheck::Binding", url: "/type/X::TypeCheck::Binding" },
//{ label: "Class: X::TypeCheck::Return", value: "X::TypeCheck::Return", url: "/type/X::TypeCheck::Return" },
//{ label: "Class: X::TypeCheck::Splice", value: "X::TypeCheck::Splice", url: "/type/X::TypeCheck::Splice" },
//{ label: "Class: X::Undeclared", value: "X::Undeclared", url: "/type/X::Undeclared" },
//{ label: "Class: int", value: "int", url: "/type/nativeInt" },
//{ label: "Prefix: !", value: "!", url: "/routine/%21" },
//{ label: "Listop: !!!", value: "!!!", url: "/routine/%21%21%21" },
//{ label: "Infix: !=", value: "!=", url: "/routine/%21%3D" },
//{ label: "Infix: %", value: "%", url: "/routine/%25" },
//{ label: "Infix: %%", value: "%%", url: "/routine/%25%25" },
//{ label: "Infix: &", value: "&", url: "/routine/%26" },
//{ label: "Infix: &&", value: "&&", url: "/routine/%26%26" },
//{ label: "Routine: ( )", value: "( )", url: "/routine/%28%20%29" },
//{ label: "Infix: (&)", value: "(&)", url: "/routine/%28%26%29" },
//{ label: "Infix: (+)", value: "(+)", url: "/routine/%28%2B%29" },
//{ label: "Infix: (-)", value: "(-)", url: "/routine/%28-%29" },
//{ label: "Infix: (.)", value: "(.)", url: "/routine/%28.%29" },
//{ label: "Infix: (<)", value: "(<)", url: "/routine/%28%3C%29" },
//{ label: "Infix: (<+)", value: "(<+)", url: "/routine/%28%3C%2B%29" },
//{ label: "Infix: (<=)", value: "(<=)", url: "/routine/%28%3C%3D%29" },
//{ label: "Infix: (>)", value: "(>)", url: "/routine/%28%3E%29" },
//{ label: "Infix: (>+)", value: "(>+)", url: "/routine/%28%3E%2B%29" },
//{ label: "Infix: (>=)", value: "(>=)", url: "/routine/%28%3E%3D%29" },
//{ label: "Infix: (^)", value: "(^)", url: "/routine/%28%5E%29" },
//{ label: "Infix: (cont)", value: "(cont)", url: "/routine/%28cont%29" },
//{ label: "Infix: (elem)", value: "(elem)", url: "/routine/%28elem%29" },
//{ label: "Infix: (|)", value: "(|)", url: "/routine/%28%7C%29" },
//{ label: "Routine: *", value: "*", url: "/routine/%2A" },
//{ label: "Infix: **", value: "**", url: "/routine/%2A%2A" },
//{ label: "Routine: +", value: "+", url: "/routine/%2B" },
//{ label: "Infix: +&", value: "+&", url: "/routine/%2B%26" },
//{ label: "Routine: ++", value: "++", url: "/routine/%2B%2B" },
//{ label: "Infix: +<", value: "+<", url: "/routine/%2B%3C" },
//{ label: "Infix: +>", value: "+>", url: "/routine/%2B%3E" },
//{ label: "Routine: +^", value: "+^", url: "/routine/%2B%5E" },
//{ label: "Infix: +|", value: "+|", url: "/routine/%2B%7C" },
//{ label: "Infix: ,", value: ",", url: "/routine/%2C" },
//{ label: "Routine: -", value: "-", url: "/routine/-" },
//{ label: "Routine: --", value: "--", url: "/routine/--" },
//{ label: "Postfix: .", value: ".", url: "/routine/." },
//{ label: "Postfix: .*", value: ".*", url: "/routine/.%2A" },
//{ label: "Postfix: .+", value: ".+", url: "/routine/.%2B" },
//{ label: "Infix: ..", value: "..", url: "/routine/.." },
//{ label: "Routine: ...", value: "...", url: "/routine/..." },
//{ label: "Infix: ..^", value: "..^", url: "/routine/..%5E" },
//{ label: "Postfix: .::", value: ".::", url: "/routine/.%3A%3A" },
//{ label: "Postfix: .:<prefix>", value: ".:<prefix>", url: "/routine/.%3A%3Cprefix%3E" },
//{ label: "Postfix: .=", value: ".=", url: "/routine/.%3D" },
//{ label: "Postfix: .?", value: ".?", url: "/routine/.%3F" },
//{ label: "Postfix: .^", value: ".^", url: "/routine/.%5E" },
//{ label: "Postfix: .postfix", value: ".postfix", url: "/routine/.postfix" },
//{ label: "Infix: :", value: ":", url: "/routine/%3A" },
//{ label: "Infix: ::=", value: "::=", url: "/routine/%3A%3A%3D" },
//{ label: "Infix: :=", value: ":=", url: "/routine/%3A%3D" },
//{ label: "Infix: <", value: "<", url: "/routine/%3C" },
//{ label: "Routine: < >", value: "< >", url: "/routine/%3C%20%3E" },
//{ label: "Infix: <=", value: "<=", url: "/routine/%3C%3D" },
//{ label: "Infix: <=>", value: "<=>", url: "/routine/%3C%3D%3E" },
//{ label: "Routine: =", value: "=", url: "/routine/%3D" },
//{ label: "Infix: =:=", value: "=:=", url: "/routine/%3D%3A%3D" },
//{ label: "Infix: ==", value: "==", url: "/routine/%3D%3D" },
//{ label: "Infix: ===", value: "===", url: "/routine/%3D%3D%3D" },
//{ label: "Infix: =>", value: "=>", url: "/routine/%3D%3E" },
//{ label: "Infix: >", value: ">", url: "/routine/%3E" },
//{ label: "Infix: >=", value: ">=", url: "/routine/%3E%3D" },
//{ label: "Routine: ?", value: "?", url: "/routine/%3F" },
//{ label: "Infix: ?? !!", value: "?? !!", url: "/routine/%3F%3F%20%21%21" },
//{ label: "Listop: ???", value: "???", url: "/routine/%3F%3F%3F" },
//{ label: "Prefix: ?^", value: "?^", url: "/routine/%3F%5E" },
//{ label: "Infix: ?|", value: "?|", url: "/routine/%3F%7C" },
//{ label: "Routine: ACCEPTS", value: "ACCEPTS", url: "/routine/ACCEPTS" },
//{ label: "Method: ASSIGN-KEY", value: "ASSIGN-KEY", url: "/routine/ASSIGN-KEY" },
//{ label: "Method: ASSIGN-POS", value: "ASSIGN-POS", url: "/routine/ASSIGN-POS" },
//{ label: "Method: AT-KEY", value: "AT-KEY", url: "/routine/AT-KEY" },
//{ label: "Method: AT-POS", value: "AT-POS", url: "/routine/AT-POS" },
//{ label: "Method: BIND-KEY", value: "BIND-KEY", url: "/routine/BIND-KEY" },
//{ label: "Method: BIND-POS", value: "BIND-POS", url: "/routine/BIND-POS" },
//{ label: "Routine: Bool", value: "Bool", url: "/routine/Bool" },
//{ label: "Method: CREATE", value: "CREATE", url: "/routine/CREATE" },
//{ label: "Method: Channel", value: "Channel", url: "/routine/Channel" },
//{ label: "Method: DELETE-KEY", value: "DELETE-KEY", url: "/routine/DELETE-KEY" },
//{ label: "Method: DELETE-POS", value: "DELETE-POS", url: "/routine/DELETE-POS" },
//{ label: "Method: Date", value: "Date", url: "/routine/Date" },
//{ label: "Sub: EVAL", value: "EVAL", url: "/routine/EVAL" },
//{ label: "Method: EXISTS-KEY", value: "EXISTS-KEY", url: "/routine/EXISTS-KEY" },
//{ label: "Method: EXISTS-POS", value: "EXISTS-POS", url: "/routine/EXISTS-POS" },
//{ label: "Method: IO", value: "IO", url: "/routine/IO" },
//{ label: "Method: IO::Notification.watch-path", value: "IO::Notification.watch-path", url: "/routine/IO%3A%3ANotification.watch-path" },
//{ label: "Method: Instant", value: "Instant", url: "/routine/Instant" },
//{ label: "Routine: Int", value: "Int", url: "/routine/Int" },
//{ label: "Method: Num", value: "Num", url: "/routine/Num" },
//{ label: "Method: Numeric", value: "Numeric", url: "/routine/Numeric" },
//{ label: "Method: Promise", value: "Promise", url: "/routine/Promise" },
//{ label: "Routine: Rat", value: "Rat", url: "/routine/Rat" },
//{ label: "Method: Real", value: "Real", url: "/routine/Real" },
//{ label: "Routine: Str", value: "Str", url: "/routine/Str" },
//{ label: "Routine: Supply", value: "Supply", url: "/routine/Supply" },
//{ label: "Method: WHERE", value: "WHERE", url: "/routine/WHERE" },
//{ label: "Method: WHICH", value: "WHICH", url: "/routine/WHICH" },
//{ label: "Method: WHY", value: "WHY", url: "/routine/WHY" },
//{ label: "Infix: X", value: "X", url: "/routine/X" },
//{ label: "Infix: Z", value: "Z", url: "/routine/Z" },
//{ label: "Routine: [ ]", value: "[ ]", url: "/routine/%5B%20%5D" },
//{ label: "Infix: \/", value: "\/", url: "/routine/%2F" },
//{ label: "Infix: \/\/", value: "\/\/", url: "/routine/%2F%2F" },
//{ label: "Routine: ^", value: "^", url: "/routine/%5E" },
//{ label: "Infix: ^..", value: "^..", url: "/routine/%5E.." },
//{ label: "Infix: ^..^", value: "^..^", url: "/routine/%5E..%5E" },
//{ label: "Infix: ^^", value: "^^", url: "/routine/%5E%5E" },
//{ label: "Infix: ^ff", value: "^ff", url: "/routine/%5Eff" },
//{ label: "Infix: ^ff^", value: "^ff^", url: "/routine/%5Eff%5E" },
//{ label: "Infix: ^fff", value: "^fff", url: "/routine/%5Efff" },
//{ label: "Infix: ^fff^", value: "^fff^", url: "/routine/%5Efff%5E" },
//{ label: "Routine: abs", value: "abs", url: "/routine/abs" },
//{ label: "Routine: abs2rel", value: "abs2rel", url: "/routine/abs2rel" },
//{ label: "Method: absolute", value: "absolute", url: "/routine/absolute" },
//{ label: "Method: abspath", value: "abspath", url: "/routine/abspath" },
//{ label: "Method: accept", value: "accept", url: "/routine/accept" },
//{ label: "Method: accessed", value: "accessed", url: "/routine/accessed" },
//{ label: "Sub: acos", value: "acos", url: "/routine/acos" },
//{ label: "Sub: acosec", value: "acosec", url: "/routine/acosec" },
//{ label: "Sub: acosh", value: "acosh", url: "/routine/acosh" },
//{ label: "Sub: acotan", value: "acotan", url: "/routine/acotan" },
//{ label: "Method: act", value: "act", url: "/routine/act" },
//{ label: "Method: action", value: "action", url: "/routine/action" },
//{ label: "Method: add_attribute", value: "add_attribute", url: "/routine/add_attribute" },
//{ label: "Method: add_fallback", value: "add_fallback", url: "/routine/add_fallback" },
//{ label: "Method: add_method", value: "add_method", url: "/routine/add_method" },
//{ label: "Method: add_parent", value: "add_parent", url: "/routine/add_parent" },
//{ label: "Method: add_private_method", value: "add_private_method", url: "/routine/add_private_method" },
//{ label: "Method: add_role", value: "add_role", url: "/routine/add_role" },
//{ label: "Method: add_trustee", value: "add_trustee", url: "/routine/add_trustee" },
//{ label: "Method: adverb", value: "adverb", url: "/routine/adverb" },
//{ label: "Routine: after", value: "after", url: "/routine/after" },
//{ label: "Method: all", value: "all", url: "/routine/all" },
//{ label: "Method: allof", value: "allof", url: "/routine/allof" },
//{ label: "Method: allowed", value: "allowed", url: "/routine/allowed" },
//{ label: "Infix: and", value: "and", url: "/routine/and" },
//{ label: "Infix: andthen", value: "andthen", url: "/routine/andthen" },
//{ label: "Method: antipair", value: "antipair", url: "/routine/antipair" },
//{ label: "Method: any", value: "any", url: "/routine/any" },
//{ label: "Method: anyof", value: "anyof", url: "/routine/anyof" },
//{ label: "Method: append", value: "append", url: "/routine/append" },
//{ label: "Method: args", value: "args", url: "/routine/args" },
//{ label: "Routine: arity", value: "arity", url: "/routine/arity" },
//{ label: "Sub: asec", value: "asec", url: "/routine/asec" },
//{ label: "Sub: asin", value: "asin", url: "/routine/asin" },
//{ label: "Sub: asinh", value: "asinh", url: "/routine/asinh" },
//{ label: "Method: assuming", value: "assuming", url: "/routine/assuming" },
//{ label: "Method: ast", value: "ast", url: "/routine/ast" },
//{ label: "Method: at", value: "at", url: "/routine/at" },
//{ label: "Sub: atan", value: "atan", url: "/routine/atan" },
//{ label: "Sub: atan2", value: "atan2", url: "/routine/atan2" },
//{ label: "Sub: atanh", value: "atanh", url: "/routine/atanh" },
//{ label: "Method: attributes", value: "attributes", url: "/routine/attributes" },
//{ label: "Routine: await", value: "await", url: "/routine/await" },
//{ label: "Method: backtrace", value: "backtrace", url: "/routine/backtrace" },
//{ label: "Sub: bag", value: "bag", url: "/routine/bag" },
//{ label: "Method: base", value: "base", url: "/routine/base" },
//{ label: "Method: base-repeating", value: "base-repeating", url: "/routine/base-repeating" },
//{ label: "Routine: basename", value: "basename", url: "/routine/basename" },
//{ label: "Method: batch", value: "batch", url: "/routine/batch" },
//{ label: "Infix: before", value: "before", url: "/routine/before" },
//{ label: "Method: bind-udp", value: "bind-udp", url: "/routine/bind-udp" },
//{ label: "Method: bless", value: "bless", url: "/routine/bless" },
//{ label: "Method: block", value: "block", url: "/routine/block" },
//{ label: "Method: bounds", value: "bounds", url: "/routine/bounds" },
//{ label: "Method: break", value: "break", url: "/routine/break" },
//{ label: "Infix: but", value: "but", url: "/routine/but" },
//{ label: "Method: cache", value: "cache", url: "/routine/cache" },
//{ label: "Method: calling-package", value: "calling-package", url: "/routine/calling-package" },
//{ label: "Method: can", value: "can", url: "/routine/can" },
//{ label: "Method: candidates", value: "candidates", url: "/routine/candidates" },
//{ label: "Routine: canonpath", value: "canonpath", url: "/routine/canonpath" },
//{ label: "Method: caps", value: "caps", url: "/routine/caps" },
//{ label: "Method: capture", value: "capture", url: "/routine/capture" },
//{ label: "Routine: catdir", value: "catdir", url: "/routine/catdir" },
//{ label: "Method: categorize-list", value: "categorize-list", url: "/routine/categorize-list" },
//{ label: "Routine: catfile", value: "catfile", url: "/routine/catfile" },
//{ label: "Routine: catpath", value: "catpath", url: "/routine/catpath" },
//{ label: "Method: cause", value: "cause", url: "/routine/cause" },
//{ label: "Routine: ceiling", value: "ceiling", url: "/routine/ceiling" },
//{ label: "Method: changed", value: "changed", url: "/routine/changed" },
//{ label: "Routine: channel", value: "channel", url: "/routine/channel" },
//{ label: "Routine: chars", value: "chars", url: "/routine/chars" },
//{ label: "Sub: chdir", value: "chdir", url: "/routine/chdir" },
//{ label: "Method: child-name", value: "child-name", url: "/routine/child-name" },
//{ label: "Method: child-typename", value: "child-typename", url: "/routine/child-typename" },
//{ label: "Sub: chmod", value: "chmod", url: "/routine/chmod" },
//{ label: "Routine: chomp", value: "chomp", url: "/routine/chomp" },
//{ label: "Routine: chop", value: "chop", url: "/routine/chop" },
//{ label: "Routine: chr", value: "chr", url: "/routine/chr" },
//{ label: "Sub: chrs", value: "chrs", url: "/routine/chrs" },
//{ label: "Method: chunks", value: "chunks", url: "/routine/chunks" },
//{ label: "Sub: classify", value: "classify", url: "/routine/classify" },
//{ label: "Method: classify-list", value: "classify-list", url: "/routine/classify-list" },
//{ label: "Routine: clone", value: "clone", url: "/routine/clone" },
//{ label: "Routine: close", value: "close", url: "/routine/close" },
//{ label: "Method: close-stdin", value: "close-stdin", url: "/routine/close-stdin" },
//{ label: "Method: closed", value: "closed", url: "/routine/closed" },
//{ label: "Method: closing", value: "closing", url: "/routine/closing" },
//{ label: "Routine: cmp", value: "cmp", url: "/routine/cmp" },
//{ label: "Method: code", value: "code", url: "/routine/code" },
//{ label: "Sub: codes", value: "codes", url: "/routine/codes" },
//{ label: "Method: column", value: "column", url: "/routine/column" },
//{ label: "Routine: comb", value: "comb", url: "/routine/comb" },
//{ label: "Sub: combinations", value: "combinations", url: "/routine/combinations" },
//{ label: "Method: comment", value: "comment", url: "/routine/comment" },
//{ label: "Method: compose_type", value: "compose_type", url: "/routine/compose_type" },
//{ label: "Method: composer", value: "composer", url: "/routine/composer" },
//{ label: "Routine: condition", value: "condition", url: "/routine/condition" },
//{ label: "Method: config", value: "config", url: "/routine/config" },
//{ label: "Method: configure_destroy", value: "configure_destroy", url: "/routine/configure_destroy" },
//{ label: "Method: configure_type_checking", value: "configure_type_checking", url: "/routine/configure_type_checking" },
//{ label: "Routine: conj", value: "conj", url: "/routine/conj" },
//{ label: "Method: connect", value: "connect", url: "/routine/connect" },
//{ label: "Method: constraints", value: "constraints", url: "/routine/constraints" },
//{ label: "Method: construct", value: "construct", url: "/routine/construct" },
//{ label: "Method: contains", value: "contains", url: "/routine/contains" },
//{ label: "Method: contents", value: "contents", url: "/routine/contents" },
//{ label: "Routine: copy", value: "copy", url: "/routine/copy" },
//{ label: "Sub: cos", value: "cos", url: "/routine/cos" },
//{ label: "Sub: cosec", value: "cosec", url: "/routine/cosec" },
//{ label: "Sub: cosh", value: "cosh", url: "/routine/cosh" },
//{ label: "Sub: cotan", value: "cotan", url: "/routine/cotan" },
//{ label: "Routine: count", value: "count", url: "/routine/count" },
//{ label: "Method: count-only", value: "count-only", url: "/routine/count-only" },
//{ label: "Method: create_type", value: "create_type", url: "/routine/create_type" },
//{ label: "Method: cue", value: "cue", url: "/routine/cue" },
//{ label: "Routine: curdir", value: "curdir", url: "/routine/curdir" },
//{ label: "Routine: curupdir", value: "curupdir", url: "/routine/curupdir" },
//{ label: "Method: day", value: "day", url: "/routine/day" },
//{ label: "Method: day-of-month", value: "day-of-month", url: "/routine/day-of-month" },
//{ label: "Method: day-of-week", value: "day-of-week", url: "/routine/day-of-week" },
//{ label: "Method: day-of-year", value: "day-of-year", url: "/routine/day-of-year" },
//{ label: "Method: days-in-month", value: "days-in-month", url: "/routine/days-in-month" },
//{ label: "Sub: dd", value: "dd", url: "/routine/dd" },
//{ label: "Method: declaration", value: "declaration", url: "/routine/declaration" },
//{ label: "Method: decode", value: "decode", url: "/routine/decode" },
//{ label: "Method: default", value: "default", url: "/routine/default" },
//{ label: "Routine: defined", value: "defined", url: "/routine/defined" },
//{ label: "Method: delayed", value: "delayed", url: "/routine/delayed" },
//{ label: "Method: denominator", value: "denominator", url: "/routine/denominator" },
//{ label: "Method: destroyers", value: "destroyers", url: "/routine/destroyers" },
//{ label: "Routine: devnull", value: "devnull", url: "/routine/devnull" },
//{ label: "Sub: die", value: "die", url: "/routine/die" },
//{ label: "Sub: dir", value: "dir", url: "/routine/dir" },
//{ label: "Routine: dir-sep", value: "dir-sep", url: "/routine/dir-sep" },
//{ label: "Method: dirname", value: "dirname", url: "/routine/dirname" },
//{ label: "Routine: div", value: "div", url: "/routine/div" },
//{ label: "Method: do", value: "do", url: "/routine/do" },
//{ label: "Infix: does", value: "does", url: "/routine/does" },
//{ label: "Routine: done", value: "done", url: "/routine/done" },
//{ label: "Term: e", value: "e", url: "/routine/e" },
//{ label: "Routine: eager", value: "eager", url: "/routine/eager" },
//{ label: "Method: earlier", value: "earlier", url: "/routine/earlier" },
//{ label: "Routine: elems", value: "elems", url: "/routine/elems" },
//{ label: "Routine: emit", value: "emit", url: "/routine/emit" },
//{ label: "Method: enclosing", value: "enclosing", url: "/routine/enclosing" },
//{ label: "Method: encode", value: "encode", url: "/routine/encode" },
//{ label: "Routine: end", value: "end", url: "/routine/end" },
//{ label: "Method: ends-with", value: "ends-with", url: "/routine/ends-with" },
//{ label: "Method: eof", value: "eof", url: "/routine/eof" },
//{ label: "Infix: eq", value: "eq", url: "/routine/eq" },
//{ label: "Infix: eqv", value: "eqv", url: "/routine/eqv" },
//{ label: "Method: error", value: "error", url: "/routine/error" },
//{ label: "Method: exception", value: "exception", url: "/routine/exception" },
//{ label: "Method: excludes-max", value: "excludes-max", url: "/routine/excludes-max" },
//{ label: "Method: excludes-min", value: "excludes-min", url: "/routine/excludes-min" },
//{ label: "Sub: exit", value: "exit", url: "/routine/exit" },
//{ label: "Routine: exitcode", value: "exitcode", url: "/routine/exitcode" },
//{ label: "Routine: exp", value: "exp", url: "/routine/exp" },
//{ label: "Method: expected", value: "expected", url: "/routine/expected" },
//{ label: "Sub: expmod", value: "expmod", url: "/routine/expmod" },
//{ label: "Routine: extension", value: "extension", url: "/routine/extension" },
//{ label: "Routine: fail", value: "fail", url: "/routine/fail" },
//{ label: "Sub: fc", value: "fc", url: "/routine/fc" },
//{ label: "Method: features", value: "features", url: "/routine/features" },
//{ label: "Infix: ff", value: "ff", url: "/routine/ff" },
//{ label: "Infix: ff^", value: "ff^", url: "/routine/ff%5E" },
//{ label: "Infix: fff", value: "fff", url: "/routine/fff" },
//{ label: "Infix: fff^", value: "fff^", url: "/routine/fff%5E" },
//{ label: "Routine: file", value: "file", url: "/routine/file" },
//{ label: "Method: filename", value: "filename", url: "/routine/filename" },
//{ label: "Method: find_method", value: "find_method", url: "/routine/find_method" },
//{ label: "Method: find_method_qualified", value: "find_method_qualified", url: "/routine/find_method_qualified" },
//{ label: "Method: finish", value: "finish", url: "/routine/finish" },
//{ label: "Sub: first", value: "first", url: "/routine/first" },
//{ label: "Routine: flat", value: "flat", url: "/routine/flat" },
//{ label: "Method: flatmap", value: "flatmap", url: "/routine/flatmap" },
//{ label: "Routine: flip", value: "flip", url: "/routine/flip" },
//{ label: "Routine: floor", value: "floor", url: "/routine/floor" },
//{ label: "Method: flurb", value: "flurb", url: "/routine/flurb" },
//{ label: "Method: flush", value: "flush", url: "/routine/flush" },
//{ label: "Method: fmt", value: "fmt", url: "/routine/fmt" },
//{ label: "Method: formatter", value: "formatter", url: "/routine/formatter" },
//{ label: "Routine: from", value: "from", url: "/routine/from" },
//{ label: "Method: from-list", value: "from-list", url: "/routine/from-list" },
//{ label: "Method: from-loop", value: "from-loop", url: "/routine/from-loop" },
//{ label: "Method: full", value: "full", url: "/routine/full" },
//{ label: "Infix: gcd", value: "gcd", url: "/routine/gcd" },
//{ label: "Infix: ge", value: "ge", url: "/routine/ge" },
//{ label: "Routine: get", value: "get", url: "/routine/get" },
//{ label: "Method: get_value", value: "get_value", url: "/routine/get_value" },
//{ label: "Method: getc", value: "getc", url: "/routine/getc" },
//{ label: "Routine: gist", value: "gist", url: "/routine/gist" },
//{ label: "Routine: got", value: "got", url: "/routine/got" },
//{ label: "Routine: grab", value: "grab", url: "/routine/grab" },
//{ label: "Routine: grabpairs", value: "grabpairs", url: "/routine/grabpairs" },
//{ label: "Routine: grep", value: "grep", url: "/routine/grep" },
//{ label: "Infix: gt", value: "gt", url: "/routine/gt" },
//{ label: "Routine: handle", value: "handle", url: "/routine/handle" },
//{ label: "Method: handled", value: "handled", url: "/routine/handled" },
//{ label: "Method: has_accessor", value: "has_accessor", url: "/routine/has_accessor" },
//{ label: "Routine: hash", value: "hash", url: "/routine/hash" },
//{ label: "Routine: head", value: "head", url: "/routine/head" },
//{ label: "Method: hidden", value: "hidden", url: "/routine/hidden" },
//{ label: "Method: hides", value: "hides", url: "/routine/hides" },
//{ label: "Method: hour", value: "hour", url: "/routine/hour" },
//{ label: "Method: how", value: "how", url: "/routine/how" },
//{ label: "Method: hyper", value: "hyper", url: "/routine/hyper" },
//{ label: "Routine: i", value: "i", url: "/routine/i" },
//{ label: "Method: id", value: "id", url: "/routine/id" },
//{ label: "Method: illegal", value: "illegal", url: "/routine/illegal" },
//{ label: "Method: im", value: "im", url: "/routine/im" },
//{ label: "Method: in", value: "in", url: "/routine/in" },
//{ label: "Method: in-timezone", value: "in-timezone", url: "/routine/in-timezone" },
//{ label: "Method: indent", value: "indent", url: "/routine/indent" },
//{ label: "Routine: index", value: "index", url: "/routine/index" },
//{ label: "Method: infinite", value: "infinite", url: "/routine/infinite" },
//{ label: "Method: infix", value: "infix", url: "/routine/infix" },
//{ label: "Method: ins", value: "ins", url: "/routine/ins" },
//{ label: "Method: install_method_cache", value: "install_method_cache", url: "/routine/install_method_cache" },
//{ label: "Method: instead", value: "instead", url: "/routine/instead" },
//{ label: "Method: int-bounds", value: "int-bounds", url: "/routine/int-bounds" },
//{ label: "Method: interval", value: "interval", url: "/routine/interval" },
//{ label: "Routine: invert", value: "invert", url: "/routine/invert" },
//{ label: "Routine: invocant", value: "invocant", url: "/routine/invocant" },
//{ label: "Trait: is DEPRECATED", value: "is DEPRECATED", url: "/routine/is%20DEPRECATED" },
//{ label: "Trait: is cached", value: "is cached", url: "/routine/is%20cached" },
//{ label: "Trait: is copy", value: "is copy", url: "/routine/is%20copy" },
//{ label: "Trait: is default", value: "is default", url: "/routine/is%20default" },
//{ label: "Trait: is dynamic", value: "is dynamic", url: "/routine/is%20dynamic" },
//{ label: "Routine: is export", value: "is export", url: "/routine/is%20export" },
//{ label: "Trait: is hidden-from-backtrace", value: "is hidden-from-backtrace", url: "/routine/is%20hidden-from-backtrace" },
//{ label: "Trait: is pure", value: "is pure", url: "/routine/is%20pure" },
//{ label: "Trait: is required", value: "is required", url: "/routine/is%20required" },
//{ label: "Routine: is rw", value: "is rw", url: "/routine/is%20rw" },
//{ label: "Routine: is-absolute", value: "is-absolute", url: "/routine/is-absolute" },
//{ label: "Method: is-hidden", value: "is-hidden", url: "/routine/is-hidden" },
//{ label: "Method: is-int", value: "is-int", url: "/routine/is-int" },
//{ label: "Routine: is-lazy", value: "is-lazy", url: "/routine/is-lazy" },
//{ label: "Method: is-leap-year", value: "is-leap-year", url: "/routine/is-leap-year" },
//{ label: "Sub: is-prime", value: "is-prime", url: "/routine/is-prime" },
//{ label: "Method: is-relative", value: "is-relative", url: "/routine/is-relative" },
//{ label: "Method: is-routine", value: "is-routine", url: "/routine/is-routine" },
//{ label: "Method: is-setting", value: "is-setting", url: "/routine/is-setting" },
//{ label: "Method: isNaN", value: "isNaN", url: "/routine/isNaN" },
//{ label: "Method: is_trusted", value: "is_trusted", url: "/routine/is_trusted" },
//{ label: "Method: is_type", value: "is_type", url: "/routine/is_type" },
//{ label: "Routine: iterator", value: "iterator", url: "/routine/iterator" },
//{ label: "Routine: join", value: "join", url: "/routine/join" },
//{ label: "Method: keep", value: "keep", url: "/routine/keep" },
//{ label: "Routine: key", value: "key", url: "/routine/key" },
//{ label: "Routine: keys", value: "keys", url: "/routine/keys" },
//{ label: "Method: kill", value: "kill", url: "/routine/kill" },
//{ label: "Routine: kv", value: "kv", url: "/routine/kv" },
//{ label: "Method: lang", value: "lang", url: "/routine/lang" },
//{ label: "Method: last", value: "last", url: "/routine/last" },
//{ label: "Method: later", value: "later", url: "/routine/later" },
//{ label: "Method: lazy", value: "lazy", url: "/routine/lazy" },
//{ label: "Routine: lc", value: "lc", url: "/routine/lc" },
//{ label: "Method: lcfirst", value: "lcfirst", url: "/routine/lcfirst" },
//{ label: "Infix: lcm", value: "lcm", url: "/routine/lcm" },
//{ label: "Infix: le", value: "le", url: "/routine/le" },
//{ label: "Infix: leg", value: "leg", url: "/routine/leg" },
//{ label: "Method: length", value: "length", url: "/routine/length" },
//{ label: "Routine: let", value: "let", url: "/routine/let" },
//{ label: "Method: level", value: "level", url: "/routine/level" },
//{ label: "Routine: line", value: "line", url: "/routine/line" },
//{ label: "Routine: lines", value: "lines", url: "/routine/lines" },
//{ label: "Method: link", value: "link", url: "/routine/link" },
//{ label: "Routine: list", value: "list", url: "/routine/list" },
//{ label: "Method: listen", value: "listen", url: "/routine/listen" },
//{ label: "Method: live", value: "live", url: "/routine/live" },
//{ label: "Method: local", value: "local", url: "/routine/local" },
//{ label: "Method: lock", value: "lock", url: "/routine/lock" },
//{ label: "Routine: log", value: "log", url: "/routine/log" },
//{ label: "Routine: log10", value: "log10", url: "/routine/log10" },
//{ label: "Method: lsb", value: "lsb", url: "/routine/lsb" },
//{ label: "Infix: lt", value: "lt", url: "/routine/lt" },
//{ label: "Method: made", value: "made", url: "/routine/made" },
//{ label: "Method: make", value: "make", url: "/routine/make" },
//{ label: "Routine: map", value: "map", url: "/routine/map" },
//{ label: "Routine: max", value: "max", url: "/routine/max" },
//{ label: "Method: merge", value: "merge", url: "/routine/merge" },
//{ label: "Routine: message", value: "message", url: "/routine/message" },
//{ label: "Routine: method", value: "method", url: "/routine/method" },
//{ label: "Method: method_table", value: "method_table", url: "/routine/method_table" },
//{ label: "Method: methods", value: "methods", url: "/routine/methods" },
//{ label: "Method: migrate", value: "migrate", url: "/routine/migrate" },
//{ label: "Routine: min", value: "min", url: "/routine/min" },
//{ label: "Method: minmax", value: "minmax", url: "/routine/minmax" },
//{ label: "Method: minute", value: "minute", url: "/routine/minute" },
//{ label: "Method: misplaced", value: "misplaced", url: "/routine/misplaced" },
//{ label: "Sub: mix", value: "mix", url: "/routine/mix" },
//{ label: "Sub: mkdir", value: "mkdir", url: "/routine/mkdir" },
//{ label: "Infix: mod", value: "mod", url: "/routine/mod" },
//{ label: "Method: mode", value: "mode", url: "/routine/mode" },
//{ label: "Method: modified", value: "modified", url: "/routine/modified" },
//{ label: "Method: month", value: "month", url: "/routine/month" },
//{ label: "Method: move", value: "move", url: "/routine/move" },
//{ label: "Method: msb", value: "msb", url: "/routine/msb" },
//{ label: "Method: multi", value: "multi", url: "/routine/multi" },
//{ label: "Method: multiness", value: "multiness", url: "/routine/multiness" },
//{ label: "Routine: name", value: "name", url: "/routine/name" },
//{ label: "Method: named", value: "named", url: "/routine/named" },
//{ label: "Method: named_names", value: "named_names", url: "/routine/named_names" },
//{ label: "Method: narrow", value: "narrow", url: "/routine/narrow" },
//{ label: "Routine: native-descriptor", value: "native-descriptor", url: "/routine/native-descriptor" },
//{ label: "Infix: ne", value: "ne", url: "/routine/ne" },
//{ label: "Routine: new", value: "new", url: "/routine/new" },
//{ label: "Method: next", value: "next", url: "/routine/next" },
//{ label: "Method: none", value: "none", url: "/routine/none" },
//{ label: "Method: norm", value: "norm", url: "/routine/norm" },
//{ label: "Routine: not", value: "not", url: "/routine/not" },
//{ label: "Sub: note", value: "note", url: "/routine/note" },
//{ label: "Routine: now", value: "now", url: "/routine/now" },
//{ label: "Method: nude", value: "nude", url: "/routine/nude" },
//{ label: "Method: numerator", value: "numerator", url: "/routine/numerator" },
//{ label: "Method: of", value: "of", url: "/routine/of" },
//{ label: "Method: offset", value: "offset", url: "/routine/offset" },
//{ label: "Method: offset-in-hours", value: "offset-in-hours", url: "/routine/offset-in-hours" },
//{ label: "Method: offset-in-minutes", value: "offset-in-minutes", url: "/routine/offset-in-minutes" },
//{ label: "Method: old", value: "old", url: "/routine/old" },
//{ label: "Method: one", value: "one", url: "/routine/one" },
//{ label: "Routine: open", value: "open", url: "/routine/open" },
//{ label: "Method: operation", value: "operation", url: "/routine/operation" },
//{ label: "Method: optional", value: "optional", url: "/routine/optional" },
//{ label: "Infix: or", value: "or", url: "/routine/or" },
//{ label: "Routine: ord", value: "ord", url: "/routine/ord" },
//{ label: "Routine: ords", value: "ords", url: "/routine/ords" },
//{ label: "Infix: orelse", value: "orelse", url: "/routine/orelse" },
//{ label: "Method: orig", value: "orig", url: "/routine/orig" },
//{ label: "Method: os-error", value: "os-error", url: "/routine/os-error" },
//{ label: "Sub: pack", value: "pack", url: "/routine/pack" },
//{ label: "Routine: package", value: "package", url: "/routine/package" },
//{ label: "Routine: package-kind", value: "package-kind", url: "/routine/package-kind" },
//{ label: "Method: package-name", value: "package-name", url: "/routine/package-name" },
//{ label: "Method: packages", value: "packages", url: "/routine/packages" },
//{ label: "Routine: pairs", value: "pairs", url: "/routine/pairs" },
//{ label: "Method: pairup", value: "pairup", url: "/routine/pairup" },
//{ label: "Routine: parameter", value: "parameter", url: "/routine/parameter" },
//{ label: "Method: params", value: "params", url: "/routine/params" },
//{ label: "Method: parent", value: "parent", url: "/routine/parent" },
//{ label: "Method: parent-name", value: "parent-name", url: "/routine/parent-name" },
//{ label: "Method: parents", value: "parents", url: "/routine/parents" },
//{ label: "Method: parse", value: "parse", url: "/routine/parse" },
//{ label: "Method: parsefile", value: "parsefile", url: "/routine/parsefile" },
//{ label: "Routine: parts", value: "parts", url: "/routine/parts" },
//{ label: "Routine: path", value: "path", url: "/routine/path" },
//{ label: "Method: payload", value: "payload", url: "/routine/payload" },
//{ label: "Sub: perl", value: "perl", url: "/routine/perl" },
//{ label: "Sub: permutations", value: "permutations", url: "/routine/permutations" },
//{ label: "Method: phaser", value: "phaser", url: "/routine/phaser" },
//{ label: "Term: pi", value: "pi", url: "/routine/pi" },
//{ label: "Routine: pick", value: "pick", url: "/routine/pick" },
//{ label: "Method: pickpairs", value: "pickpairs", url: "/routine/pickpairs" },
//{ label: "Routine: pid", value: "pid", url: "/routine/pid" },
//{ label: "Routine: placeholder", value: "placeholder", url: "/routine/placeholder" },
//{ label: "Method: plus", value: "plus", url: "/routine/plus" },
//{ label: "Method: polar", value: "polar", url: "/routine/polar" },
//{ label: "Method: poll", value: "poll", url: "/routine/poll" },
//{ label: "Sub: pop", value: "pop", url: "/routine/pop" },
//{ label: "Method: pos", value: "pos", url: "/routine/pos" },
//{ label: "Method: positional", value: "positional", url: "/routine/positional" },
//{ label: "Method: posix", value: "posix", url: "/routine/posix" },
//{ label: "Method: postfix", value: "postfix", url: "/routine/postfix" },
//{ label: "Method: postmatch", value: "postmatch", url: "/routine/postmatch" },
//{ label: "Routine: pred", value: "pred", url: "/routine/pred" },
//{ label: "Method: prematch", value: "prematch", url: "/routine/prematch" },
//{ label: "Method: prepend", value: "prepend", url: "/routine/prepend" },
//{ label: "Routine: print", value: "print", url: "/routine/print" },
//{ label: "Method: print-to", value: "print-to", url: "/routine/print-to" },
//{ label: "Method: private", value: "private", url: "/routine/private" },
//{ label: "Method: private_method_table", value: "private_method_table", url: "/routine/private_method_table" },
//{ label: "Routine: proc", value: "proc", url: "/routine/proc" },
//{ label: "Method: promise", value: "promise", url: "/routine/promise" },
//{ label: "Sub: prompt", value: "prompt", url: "/routine/prompt" },
//{ label: "Method: protect", value: "protect", url: "/routine/protect" },
//{ label: "Method: pull-one", value: "pull-one", url: "/routine/pull-one" },
//{ label: "Routine: push", value: "push", url: "/routine/push" },
//{ label: "Method: push-all", value: "push-all", url: "/routine/push-all" },
//{ label: "Method: push-at-least", value: "push-at-least", url: "/routine/push-at-least" },
//{ label: "Method: push-exactly", value: "push-exactly", url: "/routine/push-exactly" },
//{ label: "Method: push-until-lazy", value: "push-until-lazy", url: "/routine/push-until-lazy" },
//{ label: "Routine: put", value: "put", url: "/routine/put" },
//{ label: "Method: qualifier-type", value: "qualifier-type", url: "/routine/qualifier-type" },
//{ label: "Routine: quit", value: "quit", url: "/routine/quit" },
//{ label: "Method: race", value: "race", url: "/routine/race" },
//{ label: "Method: radix", value: "radix", url: "/routine/radix" },
//{ label: "Routine: rand", value: "rand", url: "/routine/rand" },
//{ label: "Method: range", value: "range", url: "/routine/range" },
//{ label: "Method: raw", value: "raw", url: "/routine/raw" },
//{ label: "Method: re", value: "re", url: "/routine/re" },
//{ label: "Routine: read", value: "read", url: "/routine/read" },
//{ label: "Method: readchars", value: "readchars", url: "/routine/readchars" },
//{ label: "Routine: readonly", value: "readonly", url: "/routine/readonly" },
//{ label: "Routine: reason", value: "reason", url: "/routine/reason" },
//{ label: "Method: rebless", value: "rebless", url: "/routine/rebless" },
//{ label: "Method: receive", value: "receive", url: "/routine/receive" },
//{ label: "Method: recv", value: "recv", url: "/routine/recv" },
//{ label: "Method: redispatcher", value: "redispatcher", url: "/routine/redispatcher" },
//{ label: "Routine: reduce", value: "reduce", url: "/routine/reduce" },
//{ label: "Routine: rel2abs", value: "rel2abs", url: "/routine/rel2abs" },
//{ label: "Method: relative", value: "relative", url: "/routine/relative" },
//{ label: "Method: rename", value: "rename", url: "/routine/rename" },
//{ label: "Sub: repeated", value: "repeated", url: "/routine/repeated" },
//{ label: "Method: replacement", value: "replacement", url: "/routine/replacement" },
//{ label: "Method: reserved", value: "reserved", url: "/routine/reserved" },
//{ label: "Method: result", value: "result", url: "/routine/result" },
//{ label: "Method: rethrow", value: "rethrow", url: "/routine/rethrow" },
//{ label: "Method: returns", value: "returns", url: "/routine/returns" },
//{ label: "Routine: reverse", value: "reverse", url: "/routine/reverse" },
//{ label: "Method: right", value: "right", url: "/routine/right" },
//{ label: "Routine: rindex", value: "rindex", url: "/routine/rindex" },
//{ label: "Sub: rmdir", value: "rmdir", url: "/routine/rmdir" },
//{ label: "Method: role", value: "role", url: "/routine/role" },
//{ label: "Method: role-name", value: "role-name", url: "/routine/role-name" },
//{ label: "Method: roles_to_compose", value: "roles_to_compose", url: "/routine/roles_to_compose" },
//{ label: "Method: rolish", value: "rolish", url: "/routine/rolish" },
//{ label: "Routine: roll", value: "roll", url: "/routine/roll" },
//{ label: "Routine: rootdir", value: "rootdir", url: "/routine/rootdir" },
//{ label: "Routine: roots", value: "roots", url: "/routine/roots" },
//{ label: "Sub: rotate", value: "rotate", url: "/routine/rotate" },
//{ label: "Routine: rotor", value: "rotor", url: "/routine/rotor" },
//{ label: "Routine: round", value: "round", url: "/routine/round" },
//{ label: "Sub: roundrobin", value: "roundrobin", url: "/routine/roundrobin" },
//{ label: "Method: routine-type", value: "routine-type", url: "/routine/routine-type" },
//{ label: "Routine: run", value: "run", url: "/routine/run" },
//{ label: "Routine: rw", value: "rw", url: "/routine/rw" },
//{ label: "Routine: say", value: "say", url: "/routine/say" },
//{ label: "Method: schedule-on", value: "schedule-on", url: "/routine/schedule-on" },
//{ label: "Method: scheduler", value: "scheduler", url: "/routine/scheduler" },
//{ label: "Routine: scope", value: "scope", url: "/routine/scope" },
//{ label: "Method: sec", value: "sec", url: "/routine/sec" },
//{ label: "Method: second", value: "second", url: "/routine/second" },
//{ label: "Method: seek", value: "seek", url: "/routine/seek" },
//{ label: "Term: self", value: "self", url: "/routine/self" },
//{ label: "Method: send", value: "send", url: "/routine/send" },
//{ label: "Sub: set", value: "set", url: "/routine/set" },
//{ label: "Method: set_hidden", value: "set_hidden", url: "/routine/set_hidden" },
//{ label: "Method: set_name", value: "set_name", url: "/routine/set_name" },
//{ label: "Method: set_package", value: "set_package", url: "/routine/set_package" },
//{ label: "Method: set_rw", value: "set_rw", url: "/routine/set_rw" },
//{ label: "Method: set_value", value: "set_value", url: "/routine/set_value" },
//{ label: "Method: setup_finalization", value: "setup_finalization", url: "/routine/setup_finalization" },
//{ label: "Method: share", value: "share", url: "/routine/share" },
//{ label: "Sub: shell", value: "shell", url: "/routine/shell" },
//{ label: "Sub: shift", value: "shift", url: "/routine/shift" },
//{ label: "Method: sigil", value: "sigil", url: "/routine/sigil" },
//{ label: "Routine: sign", value: "sign", url: "/routine/sign" },
//{ label: "Routine: signal", value: "signal", url: "/routine/signal" },
//{ label: "Method: signature", value: "signature", url: "/routine/signature" },
//{ label: "Sub: sin", value: "sin", url: "/routine/sin" },
//{ label: "Sub: sinh", value: "sinh", url: "/routine/sinh" },
//{ label: "Method: sink-all", value: "sink-all", url: "/routine/sink-all" },
//{ label: "Sub: sleep", value: "sleep", url: "/routine/sleep" },
//{ label: "Sub: sleep-till", value: "sleep-till", url: "/routine/sleep-till" },
//{ label: "Sub: sleep-timer", value: "sleep-timer", url: "/routine/sleep-timer" },
//{ label: "Sub: slip", value: "slip", url: "/routine/slip" },
//{ label: "Sub: slurp", value: "slurp", url: "/routine/slurp" },
//{ label: "Method: slurp-rest", value: "slurp-rest", url: "/routine/slurp-rest" },
//{ label: "Method: slurpy", value: "slurpy", url: "/routine/slurpy" },
//{ label: "Routine: so", value: "so", url: "/routine/so" },
//{ label: "Routine: sort", value: "sort", url: "/routine/sort" },
//{ label: "Routine: source", value: "source", url: "/routine/source" },
//{ label: "Method: source-package", value: "source-package", url: "/routine/source-package" },
//{ label: "Method: spawn", value: "spawn", url: "/routine/spawn" },
//{ label: "Sub: splice", value: "splice", url: "/routine/splice" },
//{ label: "Routine: split", value: "split", url: "/routine/split" },
//{ label: "Routine: splitdir", value: "splitdir", url: "/routine/splitdir" },
//{ label: "Routine: splitpath", value: "splitpath", url: "/routine/splitpath" },
//{ label: "Sub: sprintf", value: "sprintf", url: "/routine/sprintf" },
//{ label: "Sub: spurt", value: "spurt", url: "/routine/spurt" },
//{ label: "Routine: sqrt", value: "sqrt", url: "/routine/sqrt" },
//{ label: "Routine: squish", value: "squish", url: "/routine/squish" },
//{ label: "Method: stable", value: "stable", url: "/routine/stable" },
//{ label: "Routine: start", value: "start", url: "/routine/start" },
//{ label: "Method: started", value: "started", url: "/routine/started" },
//{ label: "Method: starts-with", value: "starts-with", url: "/routine/starts-with" },
//{ label: "Routine: status", value: "status", url: "/routine/status" },
//{ label: "Method: stderr", value: "stderr", url: "/routine/stderr" },
//{ label: "Method: stdout", value: "stdout", url: "/routine/stdout" },
//{ label: "Method: sub_signature", value: "sub_signature", url: "/routine/sub_signature" },
//{ label: "Method: subbuf", value: "subbuf", url: "/routine/subbuf" },
//{ label: "Method: subname", value: "subname", url: "/routine/subname" },
//{ label: "Method: subparse", value: "subparse", url: "/routine/subparse" },
//{ label: "Method: subst", value: "subst", url: "/routine/subst" },
//{ label: "Method: subst-mutate", value: "subst-mutate", url: "/routine/subst-mutate" },
//{ label: "Routine: substr", value: "substr", url: "/routine/substr" },
//{ label: "Method: substr-eq", value: "substr-eq", url: "/routine/substr-eq" },
//{ label: "Method: substr-rw", value: "substr-rw", url: "/routine/substr-rw" },
//{ label: "Routine: succ", value: "succ", url: "/routine/succ" },
//{ label: "Method: supply", value: "supply", url: "/routine/supply" },
//{ label: "Routine: symbol", value: "symbol", url: "/routine/symbol" },
//{ label: "Method: symlink", value: "symlink", url: "/routine/symlink" },
//{ label: "Routine: tail", value: "tail", url: "/routine/tail" },
//{ label: "Method: take", value: "take", url: "/routine/take" },
//{ label: "Sub: tan", value: "tan", url: "/routine/tan" },
//{ label: "Sub: tanh", value: "tanh", url: "/routine/tanh" },
//{ label: "Method: tap", value: "tap", url: "/routine/tap" },
//{ label: "Method: tappers", value: "tappers", url: "/routine/tappers" },
//{ label: "Method: taps", value: "taps", url: "/routine/taps" },
//{ label: "Routine: target", value: "target", url: "/routine/target" },
//{ label: "Method: target-name", value: "target-name", url: "/routine/target-name" },
//{ label: "Routine: tc", value: "tc", url: "/routine/tc" },
//{ label: "Routine: tclc", value: "tclc", url: "/routine/tclc" },
//{ label: "Method: tell", value: "tell", url: "/routine/tell" },
//{ label: "Routine: temp", value: "temp", url: "/routine/temp" },
//{ label: "Method: then", value: "then", url: "/routine/then" },
//{ label: "Method: throttle", value: "throttle", url: "/routine/throttle" },
//{ label: "Method: throw", value: "throw", url: "/routine/throw" },
//{ label: "Term: time", value: "time", url: "/routine/time" },
//{ label: "Method: timezone", value: "timezone", url: "/routine/timezone" },
//{ label: "Routine: tmpdir", value: "tmpdir", url: "/routine/tmpdir" },
//{ label: "Routine: to", value: "to", url: "/routine/to" },
//{ label: "Method: today", value: "today", url: "/routine/today" },
//{ label: "Routine: total", value: "total", url: "/routine/total" },
//{ label: "Method: trans", value: "trans", url: "/routine/trans" },
//{ label: "Routine: trim", value: "trim", url: "/routine/trim" },
//{ label: "Routine: trim-leading", value: "trim-leading", url: "/routine/trim-leading" },
//{ label: "Routine: trim-trailing", value: "trim-trailing", url: "/routine/trim-trailing" },
//{ label: "Routine: truncate", value: "truncate", url: "/routine/truncate" },
//{ label: "Routine: truncated-to", value: "truncated-to", url: "/routine/truncated-to" },
//{ label: "Method: trusts", value: "trusts", url: "/routine/trusts" },
//{ label: "Routine: twigil", value: "twigil", url: "/routine/twigil" },
//{ label: "Routine: type", value: "type", url: "/routine/type" },
//{ label: "Method: type_captures", value: "type_captures", url: "/routine/type_captures" },
//{ label: "Routine: typename", value: "typename", url: "/routine/typename" },
//{ label: "Routine: uc", value: "uc", url: "/routine/uc" },
//{ label: "Method: ucfirst", value: "ucfirst", url: "/routine/ucfirst" },
//{ label: "Method: udp", value: "udp", url: "/routine/udp" },
//{ label: "Method: uncaught_handler", value: "uncaught_handler", url: "/routine/uncaught_handler" },
//{ label: "Sub: uniname", value: "uniname", url: "/routine/uniname" },
//{ label: "Routine: unique", value: "unique", url: "/routine/unique" },
//{ label: "Routine: unival", value: "unival", url: "/routine/unival" },
//{ label: "Method: univals", value: "univals", url: "/routine/univals" },
//{ label: "Method: unlink", value: "unlink", url: "/routine/unlink" },
//{ label: "Method: unlock", value: "unlock", url: "/routine/unlock" },
//{ label: "Method: unpack", value: "unpack", url: "/routine/unpack" },
//{ label: "Sub: unshift", value: "unshift", url: "/routine/unshift" },
//{ label: "Method: unwrap", value: "unwrap", url: "/routine/unwrap" },
//{ label: "Routine: updir", value: "updir", url: "/routine/updir" },
//{ label: "Method: utc", value: "utc", url: "/routine/utc" },
//{ label: "Routine: value", value: "value", url: "/routine/value" },
//{ label: "Routine: values", value: "values", url: "/routine/values" },
//{ label: "Method: variable", value: "variable", url: "/routine/variable" },
//{ label: "Method: volume", value: "volume", url: "/routine/volume" },
//{ label: "Method: vow", value: "vow", url: "/routine/vow" },
//{ label: "Method: w", value: "w", url: "/routine/w" },
//{ label: "Method: wait", value: "wait", url: "/routine/wait" },
//{ label: "Sub: warn", value: "warn", url: "/routine/warn" },
//{ label: "Method: watch", value: "watch", url: "/routine/watch" },
//{ label: "Method: watch-path", value: "watch-path", url: "/routine/watch-path" },
//{ label: "Method: week", value: "week", url: "/routine/week" },
//{ label: "Routine: what", value: "what", url: "/routine/what" },
//{ label: "Method: when", value: "when", url: "/routine/when" },
//{ label: "Method: whole-second", value: "whole-second", url: "/routine/whole-second" },
//{ label: "Routine: wordcase", value: "wordcase", url: "/routine/wordcase" },
//{ label: "Routine: words", value: "words", url: "/routine/words" },
//{ label: "Method: wrap", value: "wrap", url: "/routine/wrap" },
//{ label: "Routine: write", value: "write", url: "/routine/write" },
//{ label: "Method: write-to", value: "write-to", url: "/routine/write-to" },
//{ label: "Infix: x", value: "x", url: "/routine/x" },
//{ label: "Infix: xx", value: "xx", url: "/routine/xx" },
//{ label: "Method: yada", value: "yada", url: "/routine/yada" },
//{ label: "Method: year", value: "year", url: "/routine/year" },
//{ label: "Method: yield", value: "yield", url: "/routine/yield" },
//{ label: "Routine: zip", value: "zip", url: "/routine/zip" },
//{ label: "Method: zip-latest", value: "zip-latest", url: "/routine/zip-latest" },
//{ label: "Routine: { }", value: "{ }", url: "/routine/%7B%20%7D" },
//{ label: "Routine: |", value: "|", url: "/routine/%7C" },
//{ label: "Infix: ||", value: "||", url: "/routine/%7C%7C" },
//{ label: "Routine: ~", value: "~", url: "/routine/~" },
//{ label: "Infix: ~~", value: "~~", url: "/routine/~~" },
//{ label: "Postcircumfix: « »", value: "« »", url: "/routine/%C2%AB%20%C2%BB" },
//{ label: "Infix: ∈", value: "∈", url: "/routine/%E2%88%88" },
//{ label: "Infix: ∉", value: "∉", url: "/routine/%E2%88%89" },
//{ label: "Infix: ∋", value: "∋", url: "/routine/%E2%88%8B" },
//{ label: "Infix: ∌", value: "∌", url: "/routine/%E2%88%8C" },
//{ label: "Infix: ∖", value: "∖", url: "/routine/%E2%88%96" },
//{ label: "Infix: ∩", value: "∩", url: "/routine/%E2%88%A9" },
//{ label: "Infix: ∪", value: "∪", url: "/routine/%E2%88%AA" },
//{ label: "Infix: ≼", value: "≼", url: "/routine/%E2%89%BC" },
//{ label: "Infix: ≽", value: "≽", url: "/routine/%E2%89%BD" },
//{ label: "Infix: ⊂", value: "⊂", url: "/routine/%E2%8A%82" },
//{ label: "Infix: ⊃", value: "⊃", url: "/routine/%E2%8A%83" },
//{ label: "Infix: ⊄", value: "⊄", url: "/routine/%E2%8A%84" },
//{ label: "Infix: ⊅", value: "⊅", url: "/routine/%E2%8A%85" },
//{ label: "Infix: ⊆", value: "⊆", url: "/routine/%E2%8A%86" },
//{ label: "Infix: ⊇", value: "⊇", url: "/routine/%E2%8A%87" },
//{ label: "Infix: ⊈", value: "⊈", url: "/routine/%E2%8A%88" },
//{ label: "Infix: ⊉", value: "⊉", url: "/routine/%E2%8A%89" },
//{ label: "Infix: ⊍", value: "⊍", url: "/routine/%E2%8A%8D" },
//{ label: "Infix: ⊎", value: "⊎", url: "/routine/%E2%8A%8E" },
//{ label: "Infix: ⊖", value: "⊖", url: "/routine/%E2%8A%96" }
      //],
      //select: function (event, ui) { window.location.href = ui.item.url; },
      //autoFocus: true
  //});
//});
